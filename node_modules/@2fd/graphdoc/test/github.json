{
  "data": {
    "__schema": {
      "queryType": {
        "name": "Query",
        "description": "The query root of GitHub's GraphQL interface.",
        "kind": "OBJECT"
      },
      "mutationType": {
        "name": "Mutation",
        "description": "The root query for implementing GraphQL mutations.",
        "kind": "OBJECT"
      },
      "subscriptionType": null,
      "types": [
        {
          "name": "DeploymentState",
          "kind": "ENUM",
          "description": "The possible deployment states.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "PENDING",
              "description": "The deployment is pending.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUCCESS",
              "description": "The deployment was successful.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILURE",
              "description": "The deployment has failed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INACTIVE",
              "description": "The deployment is inactive.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ERROR",
              "description": "The deployment experienced an error.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "IssueEventType",
          "kind": "ENUM",
          "description": "The possible issue event types.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ASSIGNED",
              "description": "The issue was assigned to the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BASE_REF_FORCE_PUSHED",
              "description": "The base branch was force pushed by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLOSED",
              "description": "The issue was closed by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEMILESTONED",
              "description": "The issue had a milestone removed from it.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DEPLOYED",
              "description": "The branch was deployed by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HEAD_REF_DELETED",
              "description": "The head branch was deleted by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HEAD_REF_FORCE_PUSHED",
              "description": "The head branch was force pushed by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HEAD_REF_RESTORED",
              "description": "The head branch was restored by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LABELED",
              "description": "A label was added to the issue.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCKED",
              "description": "The issue was locked by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MENTIONED",
              "description": "The pull request or issue was mentioned by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERGED",
              "description": "The issue was merged by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MILESTONED",
              "description": "The issue had a milestone added to it.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REFERENCED",
              "description": "The issue was referenced from a commit message.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RENAMED",
              "description": "The issue's title was changed.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REOPENED",
              "description": "The issue was reopened by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REVIEW_REQUESTED",
              "description": "The actor requested review from the subject.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REVIEW_REQUEST_REMOVED",
              "description": "The actor removed the review request for the subject.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REVIEW_DISMISSED",
              "description": "The review was dismissed by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIBED",
              "description": "The pull request or issue was subscribed to by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNASSIGNED",
              "description": "The issue was unassigned to the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNLABELED",
              "description": "A label was removed from the issue.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNLOCKED",
              "description": "The issue was unlocked by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSUBSCRIBED",
              "description": "The pull request or issue was unsubscribed from by the actor.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "ReactionOrderField",
          "kind": "ENUM",
          "description": "A list of fields that reactions can be ordered by.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT",
              "description": "Allows ordering a list of reactions by when they were created.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "IssueEvent",
          "kind": "INTERFACE",
          "description": "Represents an issue event.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "AssignedEvent",
              "description": "Represents an 'assigned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BaseRefForcePushedEvent",
              "description": "Represents a 'base_ref_force_pushed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ClosedEvent",
              "description": "Represents a 'closed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DemilestonedEvent",
              "description": "Represents a 'demilestoned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DeployedEvent",
              "description": "Represents a 'deployed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefDeletedEvent",
              "description": "Represents a 'head_ref_deleted' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefForcePushedEvent",
              "description": "Represents a 'head_ref_force_pushed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefRestoredEvent",
              "description": "Represents a 'head_ref_restored' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "LabeledEvent",
              "description": "Represents a 'labeled' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "LockedEvent",
              "description": "Represents a 'locked' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MentionedEvent",
              "description": "Represents a 'mentioned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MergedEvent",
              "description": "Represents a 'merged' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MilestonedEvent",
              "description": "Represents a 'milestoned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReferencedEvent",
              "description": "Represents a 'referenced' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "RenamedEvent",
              "description": "Represents a 'renamed' event on a given issue or pull request or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReopenedEvent",
              "description": "Represents a 'reopened' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewDismissedEvent",
              "description": "Represents a 'review_dismissed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewRequestRemovedEvent",
              "description": "Represents an 'review_request_removed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewRequestedEvent",
              "description": "Represents an 'review_requested' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "SubscribedEvent",
              "description": "Represents a 'subscribed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnassignedEvent",
              "description": "Represents a 'unassigned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnlabeledEvent",
              "description": "Represents a 'unlabeled' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnlockedEvent",
              "description": "Represents a 'unlocked' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnsubscribedEvent",
              "description": "Represents a 'unsubscribed' event on a given issue or pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "Issue",
          "kind": "OBJECT",
          "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
          "fields": [
            {
              "name": "assignees",
              "description": "A list of Users assigned to the Issue or Pull Request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "author",
              "description": "The author of the issue or pull request.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "Identifies the body of the issue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "Identifies the body of the issue rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyText",
              "description": "Identifies the body of the issue rendered to text.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comments",
              "description": "A list of comments associated with the Issue.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueCommentConnection",
                  "description": "The connection type for IssueComment.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "editor",
              "description": "The editor of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "labels",
              "description": "A list of labels associated with the Issue or Pull Request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LabelConnection",
                "description": "The connection type for Label.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "liveReactionUpdatesEnabled",
              "description": "Are reaction live updates enabled for this subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "milestone",
              "description": "Identifies the milestone associated with the issue.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Milestone",
                "description": "Represents a Milestone object on a given repository.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": "Identifies the issue number.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "participants",
              "description": "A list of Users that are participating in the Issue's conversation.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this issue",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ReactionGroup",
                    "description": "A group of emoji reactions to a particular piece of content.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "content",
                  "description": "Allows filtering Reactions by emoji.",
                  "type": {
                    "kind": "ENUM",
                    "name": "ReactionContent",
                    "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Allows specifying the order in which reactions are returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ReactionOrder",
                    "description": "Ways in which lists of reactions can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactionConnection",
                  "description": "A list of reactions that have been left on the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionsWebsocket",
              "description": "The websocket channel ID for reaction live updates.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the issue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "Identifies the state of the issue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueState",
                  "description": "The possible states of an issue.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timeline",
              "description": "A list of events associated with an Issue or PullRequest.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "since",
                  "description": "Allows filtering timeline events by a `since` timestamp.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueTimelineConnection",
                  "description": "The connection type for IssueTimelineItem.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "title",
              "description": "Identifies the issue title.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this issue",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this issue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "websocket",
              "description": "The websocket channel ID for live updates.",
              "args": [
                {
                  "name": "channel",
                  "description": "The channel to use.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "IssuePubSubTopic",
                      "description": "The possible PubSub channels for an issue.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Comment",
              "description": "Represents a comment.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Issueish",
              "description": "Shared features of Issues and Pull Requests.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Timeline",
              "description": "Represents all of the events visible to a user from an Issue or PullRequest timeline.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ID",
          "kind": "SCALAR",
          "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Boolean",
          "kind": "SCALAR",
          "description": "Represents `true` or `false` values.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "String",
          "kind": "SCALAR",
          "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "HTML",
          "kind": "SCALAR",
          "description": "A string containing HTML code.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DateTime",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded UTC date string.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommentCannotEditReason",
          "kind": "ENUM",
          "description": "The possible errors that will prevent a user from editting a comment.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "INSUFFICIENT_ACCESS",
              "description": "You must be the author or have write access to this repository to edit this comment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOCKED",
              "description": "Unable to create comment because issue is locked.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LOGIN_REQUIRED",
              "description": "You must be logged in to edit this comment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MAINTENANCE",
              "description": "Repository is under maintenance.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VERIFIED_EMAIL_REQUIRED",
              "description": "At least one email address must be verified to edit this comment.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "Author",
          "kind": "INTERFACE",
          "description": "Represents an object which can create content. Typically a User or Bot.",
          "fields": [
            {
              "name": "avatarURL",
              "description": "A URL pointing to the author's public avatar.",
              "args": [
                {
                  "name": "size",
                  "description": "The size of the resulting square image.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "login",
              "description": "The username of the author.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The path to this author.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Bot",
              "description": "A special type of user which takes actions on behalf of integrations.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "User",
              "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
              "ofType": null
            }
          ]
        },
        {
          "name": "Int",
          "kind": "SCALAR",
          "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "URI",
          "kind": "SCALAR",
          "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Repository",
          "kind": "OBJECT",
          "description": "A repository contains the content for a project.",
          "fields": [
            {
              "name": "commitComments",
              "description": "A list of commit comments associated with the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitCommentConnection",
                  "description": "The connection type for CommitComment.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "defaultBranchRef",
              "description": "The Ref associated with the repository's default branch.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the repository.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "descriptionHTML",
              "description": "The description of the repository rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "diskUsage",
              "description": "The number of kilobytes this repository occupies on disk.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "forks",
              "description": "A list of forked repositories.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "privacy",
                  "description": "If non-null, filters repositories according to privacy",
                  "type": {
                    "kind": "ENUM",
                    "name": "RepositoryPrivacy",
                    "description": "The privacy of a repository",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for repositories returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "RepositoryOrder",
                    "description": "Ordering options for repository connections",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "affiliation",
                  "description": "Affiliation options for repositories returned from the connection",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RepositoryAffiliation",
                      "description": "The affiliation of a user to a repository",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "isLocked",
                  "description": "If non-null, filters repositories according to whether they have been locked",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryConnection",
                  "description": "A list of repositories owned by the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasIssuesEnabled",
              "description": "Indicates if the repository has issues feature enabled.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasWikiEnabled",
              "description": "Indicates if the repository has wiki feature enabled.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "homepageURL",
              "description": "The repository's URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isFork",
              "description": "Identifies if the repository is a fork.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isLocked",
              "description": "Indicates if the repository has been locked or not.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isMirror",
              "description": "Identifies if the repository is a mirror.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPrivate",
              "description": "Identifies if the repository is private.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Returns a single issue from the current repository by number.",
              "args": [
                {
                  "name": "number",
                  "description": "The number for the issue to be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Issue",
                "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issueish",
              "description": "Returns a single issue-like object from the current repository by number.",
              "args": [
                {
                  "name": "number",
                  "description": "The number for the issue to be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "INTERFACE",
                "name": "Issueish",
                "description": "Shared features of Issues and Pull Requests.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issues",
              "description": "A list of issues that have been opened in the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the issues by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "IssueState",
                        "description": "The possible states of an issue.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "labels",
                  "description": "A list of label names to filter the issues by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueConnection",
                  "description": "The connection type for Issue.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "label",
              "description": "Returns a single label by name",
              "args": [
                {
                  "name": "name",
                  "description": "Label name",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Label",
                "description": "A label for categorizing Issues or Milestones with a given Repository.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "labels",
              "description": "A list of labels associated with the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LabelConnection",
                "description": "The connection type for Label.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "languages",
              "description": "A list containing a breakdown of the language composition of the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Order for connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "LanguageOrder",
                    "description": "Ordering options for language connections.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LanguageConnection",
                "description": "A list of languages associated with the parent.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "license",
              "description": "The license associated with the repository",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lockReason",
              "description": "The reason the repository has been locked.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "RepositoryLockReason",
                "description": "The possible reasons a given repsitory could be in a locked state.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mentionableUsers",
              "description": "A list of Users that can be mentioned in the context of the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "milestone",
              "description": "Returns a single milestone from the current repository by number.",
              "args": [
                {
                  "name": "number",
                  "description": "The number for the milestone to be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Milestone",
                "description": "Represents a Milestone object on a given repository.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "milestones",
              "description": "A list of milestones associated with the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MilestoneConnection",
                "description": "The connection type for Milestone.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mirrorURL",
              "description": "The repository's original mirror URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "object",
              "description": "A Git object in the repository",
              "args": [
                {
                  "name": "oid",
                  "description": "The Git object ID",
                  "type": {
                    "kind": "SCALAR",
                    "name": "GitObjectID",
                    "description": "A Git object ID.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "expression",
                  "description": "A Git revision expression suitable for rev-parse",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "INTERFACE",
                "name": "GitObject",
                "description": "Represents a Git object.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "owner",
              "description": "The User owner of the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "RepositoryOwner",
                  "description": "Represents an owner of a Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "parent",
              "description": "The repository parent, if this is a fork.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Repository",
                "description": "A repository contains the content for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this repository",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "primaryLanguage",
              "description": "The primary language of the repository's code.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Language",
                "description": "Represents a given language found in repositories.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "Find project by number.",
              "args": [
                {
                  "name": "number",
                  "description": "The project number to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "description": "Projects manage issues, pull requests and notes within a project owner.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projects",
              "description": "A list of projects under the owner.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for projects returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectOrder",
                    "description": "Ways in which lists of projects can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "search",
                  "description": "Query to search projects by, currently only searching by name.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the projects by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectState",
                        "description": "State of the project; either 'open' or 'closed'",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectConnection",
                  "description": "The connection type for Project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsPath",
              "description": "The HTTP path listing repository's projects",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsUrl",
              "description": "The HTTP url listing repository's projects",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "protectedBranches",
              "description": "A list of protected branches that are on this repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProtectedBranchConnection",
                  "description": "The connection type for ProtectedBranch.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequest",
              "description": "Returns a single pull request from the current repository by number.",
              "args": [
                {
                  "name": "number",
                  "description": "The number for the pull request to be returned.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PullRequest",
                "description": "A repository pull request.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequests",
              "description": "A list of pull requests that have been opened in the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the pull requests by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PullRequestState",
                        "description": "The possible states of a pull request.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "labels",
                  "description": "A list of label names to filter the pull requests by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "headRefName",
                  "description": "The head ref name to filter the pull requests by.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "baseRefName",
                  "description": "The base ref name to filter the pull requests by.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestConnection",
                  "description": "The connection type for PullRequest.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pushedAt",
              "description": "Identifies when the repository was last pushed to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ref",
              "description": "Fetch a given ref from the repository",
              "args": [
                {
                  "name": "qualifiedName",
                  "description": "The ref to retrieve.Fully qualified matches are checked in order (`refs/heads/master`) before falling back onto checks for short name matches (`master`).",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "refs",
              "description": "Fetch a list of refs from the repository",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "refPrefix",
                  "description": "A ref name prefix like `refs/heads/`, `refs/tags/`, etc.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "direction",
                  "description": "The ordering direction.",
                  "type": {
                    "kind": "ENUM",
                    "name": "OrderDirection",
                    "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RefConnection",
                "description": "The connection type for Ref.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "releases",
              "description": "List of releases which are dependent on this repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReleaseConnection",
                  "description": "The connection type for Release.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "stargazers",
              "description": "A list of users who have starred this repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Order for connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StarOrder",
                    "description": "Ways in which star connections can be ordered.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StargazerConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this repository",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanCreateProjects",
              "description": "Can the current viewer create new projects on this owner.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanUpdateTopics",
              "description": "Indicates whether the viewer can update the topics of this repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerHasStarred",
              "description": "Returns a boolean indicating whether the viewing user has starred this repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "SubscriptionState",
                  "description": "The possible states of a subscription.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "watchers",
              "description": "A list of users watching the repository.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "ProjectOwner",
              "description": "Represents an owner of a Project.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Subscribable",
              "description": "Entities that can be subscribed to for web and email notifications.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryInfo",
              "description": "A subset of repository info.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Project",
          "kind": "OBJECT",
          "description": "Projects manage issues, pull requests and notes within a project owner.",
          "fields": [
            {
              "name": "body",
              "description": "The project's description body.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "The projects description body rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "closedAt",
              "description": "Identifities the date and time when the project was closed.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "columns",
              "description": "List of columns in the project",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumnConnection",
                  "description": "The connection type for ProjectColumn.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "creator",
              "description": "The user that originally created the project.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The project's name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": "The project's number.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "owner",
              "description": "The project's owner. Currently limited to repositories and organizations.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "ProjectOwner",
                  "description": "Represents an owner of a Project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this project",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "Whether the project is open or closed.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ProjectState",
                  "description": "State of the project; either 'open' or 'closed'",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this project",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Can the current viewer edit this project.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectState",
          "kind": "ENUM",
          "description": "State of the project; either 'open' or 'closed'",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "OPEN",
              "description": "The project is open.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLOSED",
              "description": "The project is closed.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "User",
          "kind": "OBJECT",
          "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
          "fields": [
            {
              "name": "avatarURL",
              "description": "A URL pointing to the user's public avatar.",
              "args": [
                {
                  "name": "size",
                  "description": "The size of the resulting square image.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bio",
              "description": "The user's public profile bio.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bioHTML",
              "description": "The user's public profile bio as HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "company",
              "description": "The user's public profile company.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "companyHTML",
              "description": "The user's public profile company as HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "contributedRepositories",
              "description": "A list of repositories that the user recently contributed to.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryConnection",
                  "description": "A list of repositories owned by the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "email",
              "description": "The user's public profile email.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "followers",
              "description": "A list of users the given user is followed by.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FollowerConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "following",
              "description": "A list of users the given user is following.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FollowingConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gist",
              "description": "Find gist by repo name.",
              "args": [
                {
                  "name": "name",
                  "description": "The gist name to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Gist",
                "description": "A Gist.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gists",
              "description": "A list of the Gists the user has created.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "visibility",
                  "description": "Allows filtering by gist visibility.",
                  "type": {
                    "kind": "ENUM",
                    "name": "GistVisibility",
                    "description": "The possible Gist visibility types",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GistConnection",
                  "description": "The connection type for Gist.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isBountyHunter",
              "description": "Whether or not this user is a participant in the GitHub Security Bug Bounty.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isCampusExpert",
              "description": "Whether or not this user is a participant in the GitHub Campus Experts Program.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeveloperProgramMember",
              "description": "Whether or not this user is a GitHub Developer Program member.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isEmployee",
              "description": "Whether or not this user is a GitHub employee.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isHireable",
              "description": "Whether or not the user has marked themselves as for hire.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isSiteAdmin",
              "description": "Whether or not this user is a site administrator.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isViewer",
              "description": "Whether or not this user is the viewing user.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "location",
              "description": "The user's public profile location.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "login",
              "description": "The username used to login.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The user's public profile name.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "organization",
              "description": "Find an organization by its login that the user belongs to.",
              "args": [
                {
                  "name": "login",
                  "description": "The login of the organization to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Organization",
                "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "organizations",
              "description": "A list of organizations the user belongs to.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrganizationConnection",
                  "description": "The connection type for Organization.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pinnedRepositories",
              "description": "A list of repositories this user has pinned to their profile",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryConnection",
                  "description": "A list of repositories owned by the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequests",
              "description": "A list of pull requests assocated with this user.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the pull requests by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PullRequestState",
                        "description": "The possible states of a pull request.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "labels",
                  "description": "A list of label names to filter the pull requests by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "SCALAR",
                        "name": "String",
                        "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "headRefName",
                  "description": "The head ref name to filter the pull requests by.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "baseRefName",
                  "description": "The base ref name to filter the pull requests by.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestConnection",
                  "description": "The connection type for PullRequest.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repositories",
              "description": "A list of repositories that the user owns.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "privacy",
                  "description": "If non-null, filters repositories according to privacy",
                  "type": {
                    "kind": "ENUM",
                    "name": "RepositoryPrivacy",
                    "description": "The privacy of a repository",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "isFork",
                  "description": "If non-null, filters repositories according to whether they are forks of another repository",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for repositories returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "RepositoryOrder",
                    "description": "Ordering options for repository connections",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "affiliation",
                  "description": "Affiliation options for repositories returned from the connection",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RepositoryAffiliation",
                      "description": "The affiliation of a user to a repository",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "isLocked",
                  "description": "If non-null, filters repositories according to whether they have been locked",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryConnection",
                  "description": "A list of repositories owned by the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Find Repository.",
              "args": [
                {
                  "name": "name",
                  "description": "Name of Repository to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Repository",
                "description": "A repository contains the content for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "starredRepositories",
              "description": "Repositories the user has starred.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "ownedByViewer",
                  "description": "Filters starred repositories to only return repositories owned by the viewer.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Order for connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StarOrder",
                    "description": "Ways in which star connections can be ordered.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StarredRepositoryConnection",
                  "description": "The connection type for Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanFollow",
              "description": "Whether or not the viewer is able to follow the user.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerIsFollowing",
              "description": "Whether or not this user is followed by the viewer.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "watching",
              "description": "A list of repositories the given user is watching.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryConnection",
                  "description": "A list of repositories owned by the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "websiteURL",
              "description": "A URL pointing to the user's public website/blog.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Author",
              "description": "Represents an object which can create content. Typically a User or Bot.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryOwner",
              "description": "Represents an owner of a Repository.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Release",
          "kind": "OBJECT",
          "description": "A release contains the content for a release.",
          "fields": [
            {
              "name": "description",
              "description": "Identifies the description of the release.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Identifies the title of the release.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this issue",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "publishedAt",
              "description": "Identifies the date and time when the release was created.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "releaseAsset",
              "description": "List of releases assets which are dependent on this release.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "name",
                  "description": "A list of names to filter the assets by.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReleaseAssetConnection",
                  "description": "The connection type for ReleaseAsset.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "releaseAssets",
              "description": "List of releases assets which are dependent on this release.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReleaseAssetConnection",
                  "description": "The connection type for ReleaseAsset.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tag",
              "description": "The Git tag the release points to",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this issue",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Ref",
          "kind": "OBJECT",
          "description": "Represents a Git reference.",
          "fields": [
            {
              "name": "associatedPullRequests",
              "description": "A list of pull requests with this ref as the head ref.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the pull requests by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PullRequestState",
                        "description": "The possible states of a pull request.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestConnection",
                  "description": "The connection type for PullRequest.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The ref name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "prefix",
              "description": "The ref's prefix, such as `refs/heads/` or `refs/tags/`.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository the ref belongs to.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "target",
              "description": "The object the ref points to.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "GitObject",
                  "description": "Represents a Git object.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GitObject",
          "kind": "INTERFACE",
          "description": "Represents a Git object.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "GitObjectID",
                  "description": "A Git object ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Blob",
              "description": "Represents a Git blob.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Commit",
              "description": "Represents a Git commit.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Tag",
              "description": "Represents a Git tag.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Tree",
              "description": "Represents a Git tree.",
              "ofType": null
            }
          ]
        },
        {
          "name": "GitObjectID",
          "kind": "SCALAR",
          "description": "A Git object ID.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequest.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequest",
                  "description": "A repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PullRequest",
                "description": "A repository pull request.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequest",
          "kind": "OBJECT",
          "description": "A repository pull request.",
          "fields": [
            {
              "name": "assignees",
              "description": "A list of Users assigned to the Issue or Pull Request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "author",
              "description": "The author of the issue or pull request.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "baseRef",
              "description": "Identifies the base Ref associated with the pull request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "baseRefName",
              "description": "Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "Identifies the body of the pull request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "Identifies the body of the pull request rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyText",
              "description": "Identifies the body of the pull request rendered to text.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comments",
              "description": "A list of comments associated with the pull request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueCommentConnection",
                  "description": "The connection type for IssueComment.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commits",
              "description": "A list of commits present in this pull request's head branch not present in the base branch.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitConnection",
                  "description": "The connection type for Commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "editor",
              "description": "The editor of this pull request's body.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "headRef",
              "description": "Identifies the head Ref associated with the pull request.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "headRefName",
              "description": "Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "headRepository",
              "description": "The repository associated with this pull request's head Ref.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Repository",
                "description": "A repository contains the content for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "headRepositoryOwner",
              "description": "The owner of the repository associated with this pull request's head Ref.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "RepositoryOwner",
                  "description": "Represents an owner of a Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "labels",
              "description": "A list of labels associated with the Issue or Pull Request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LabelConnection",
                "description": "The connection type for Label.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "liveReactionUpdatesEnabled",
              "description": "Are reaction live updates enabled for this subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mergeCommit",
              "description": "The commit that was created when this pull request was merged.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Commit",
                "description": "Represents a Git commit.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": "Identifies the pull request number.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this issue",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ReactionGroup",
                    "description": "A group of emoji reactions to a particular piece of content.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "content",
                  "description": "Allows filtering Reactions by emoji.",
                  "type": {
                    "kind": "ENUM",
                    "name": "ReactionContent",
                    "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Allows specifying the order in which reactions are returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ReactionOrder",
                    "description": "Ways in which lists of reactions can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactionConnection",
                  "description": "A list of reactions that have been left on the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionsWebsocket",
              "description": "The websocket channel ID for reaction live updates.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this pull request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reviewRequests",
              "description": "A list of review requests associated with the pull request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "ReviewRequestConnection",
                "description": "The connection type for ReviewRequest.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reviews",
              "description": "A list of reviews associated with the pull request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the reviews.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "PullRequestReviewState",
                        "description": "The possible states of a pull request review.",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PullRequestReviewConnection",
                "description": "The connection type for PullRequestReview.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "Identifies the state of the pull request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PullRequestState",
                  "description": "The possible states of a pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timeline",
              "description": "A list of events associated with an Issue or PullRequest.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "since",
                  "description": "Allows filtering timeline events by a `since` timestamp.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueTimelineConnection",
                  "description": "The connection type for IssueTimelineItem.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "title",
              "description": "Identifies the pull request title.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this issue",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this issue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "websocket",
              "description": "The websocket channel ID for live updates.",
              "args": [
                {
                  "name": "channel",
                  "description": "The channel to use.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PullRequestPubSubTopic",
                      "description": "The possible PubSub channels for a pull request.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Comment",
              "description": "Represents a comment.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Issueish",
              "description": "Shared features of Issues and Pull Requests.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Timeline",
              "description": "Represents all of the events visible to a user from an Issue or PullRequest timeline.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LabelConnection",
          "kind": "OBJECT",
          "description": "The connection type for Label.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "LabelEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Label",
                  "description": "A label for categorizing Issues or Milestones with a given Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LabelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Label",
                "description": "A label for categorizing Issues or Milestones with a given Repository.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Label",
          "kind": "OBJECT",
          "description": "A label for categorizing Issues or Milestones with a given Repository.",
          "fields": [
            {
              "name": "color",
              "description": "Identifies the label color.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issues",
              "description": "A list of issues associated with this label.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "IssueConnection",
                "description": "The connection type for Issue.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Identifies the label name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequests",
              "description": "A list of pull requests associated with this label.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "PullRequestConnection",
                "description": "The connection type for PullRequest.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this label.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssueConnection",
          "kind": "OBJECT",
          "description": "The connection type for Issue.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssueEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Issue",
                "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PageInfo",
          "kind": "OBJECT",
          "description": "Information about pagination in a connection.",
          "fields": [
            {
              "name": "endCursor",
              "description": "When paginating forwards, the cursor to continue",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasNextPage",
              "description": "Indicates if there are more pages to fetch",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasPreviousPage",
              "description": "Indicates if there are any pages prior to the current page",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startCursor",
              "description": "When paginating backwards, the cursor to continue",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Node",
          "kind": "INTERFACE",
          "description": "An object with an ID.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "AssignedEvent",
              "description": "Represents an 'assigned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BaseRefForcePushedEvent",
              "description": "Represents a 'base_ref_force_pushed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Blob",
              "description": "Represents a Git blob.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Bot",
              "description": "A special type of user which takes actions on behalf of integrations.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ClosedEvent",
              "description": "Represents a 'closed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Commit",
              "description": "Represents a Git commit.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "CommitComment",
              "description": "Represents a comment on a given Commit.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DemilestonedEvent",
              "description": "Represents a 'demilestoned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DeployedEvent",
              "description": "Represents a 'deployed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Deployment",
              "description": "Represents triggered deployment instance.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DeploymentStatus",
              "description": "Describes the status of a given deployment attempt.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Gist",
              "description": "A Gist.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GistComment",
              "description": "Represents a comment on an Gist.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefDeletedEvent",
              "description": "Represents a 'head_ref_deleted' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefForcePushedEvent",
              "description": "Represents a 'head_ref_force_pushed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefRestoredEvent",
              "description": "Represents a 'head_ref_restored' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IssueComment",
              "description": "Represents a comment on an Issue.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Label",
              "description": "A label for categorizing Issues or Milestones with a given Repository.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "LabeledEvent",
              "description": "Represents a 'labeled' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Language",
              "description": "Represents a given language found in repositories.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "LockedEvent",
              "description": "Represents a 'locked' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MentionedEvent",
              "description": "Represents a 'mentioned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MergedEvent",
              "description": "Represents a 'merged' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Milestone",
              "description": "Represents a Milestone object on a given repository.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MilestonedEvent",
              "description": "Represents a 'milestoned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Organization",
              "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Project",
              "description": "Projects manage issues, pull requests and notes within a project owner.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ProjectCard",
              "description": "A card in a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ProjectColumn",
              "description": "A column inside a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ProtectedBranch",
              "description": "A repository protected branch.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReview",
              "description": "A review object for a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReviewComment",
              "description": "A review comment associated with a given repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReviewThread",
              "description": "A threaded list of comments for a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Reaction",
              "description": "An emoji reaction to a particular piece of content.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Ref",
              "description": "Represents a Git reference.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReferencedEvent",
              "description": "Represents a 'referenced' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Release",
              "description": "A release contains the content for a release.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReleaseAsset",
              "description": "A release asset contains the content for a release asset.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "RenamedEvent",
              "description": "Represents a 'renamed' event on a given issue or pull request or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReopenedEvent",
              "description": "Represents a 'reopened' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Repository",
              "description": "A repository contains the content for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "RepositoryInvitation",
              "description": "An invitation for a user to be added to a repository.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewDismissalAllowance",
              "description": "A team or user who as the ability to dismiss a review on a protected branch.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewDismissedEvent",
              "description": "Represents a 'review_dismissed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewRequest",
              "description": "A request for a user to review a pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewRequestRemovedEvent",
              "description": "Represents an 'review_request_removed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewRequestedEvent",
              "description": "Represents an 'review_requested' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Status",
              "description": "Represents a commit status.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "StatusContext",
              "description": "Represents an individual commit status context",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "SubscribedEvent",
              "description": "Represents a 'subscribed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Tag",
              "description": "Represents a Git tag.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Team",
              "description": "A team of users in an organization.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Tree",
              "description": "Represents a Git tree.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnassignedEvent",
              "description": "Represents a 'unassigned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnlabeledEvent",
              "description": "Represents a 'unlabeled' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnlockedEvent",
              "description": "Represents a 'unlocked' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnsubscribedEvent",
              "description": "Represents a 'unsubscribed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "User",
              "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
              "ofType": null
            }
          ]
        },
        {
          "name": "UserConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UserEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReactionGroup",
          "kind": "OBJECT",
          "description": "A group of emoji reactions to a particular piece of content.",
          "fields": [
            {
              "name": "content",
              "description": "Identifies the emoji reaction.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ReactionContent",
                  "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies when the reaction was created.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "The subject that was reacted to.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "Reactable",
                  "description": "Represents a subject that can be reacted on.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "users",
              "description": "Users who have reacted to the reaction subject with the emotion represented by this reaction group",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactingUserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerHasReacted",
              "description": "Whether or not the authenticated user has left a reaction on the subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReactionContent",
          "kind": "ENUM",
          "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "THUMBS_UP",
              "description": "Represents the 👍 emoji.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "THUMBS_DOWN",
              "description": "Represents the 👎 emoji.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LAUGH",
              "description": "Represents the 😄 emoji.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HOORAY",
              "description": "Represents the 🎉 emoji.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CONFUSED",
              "description": "Represents the 😕 emoji.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "HEART",
              "description": "Represents the ❤️ emoji.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "Reactable",
          "kind": "INTERFACE",
          "description": "Represents a subject that can be reacted on.",
          "fields": [
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "liveReactionUpdatesEnabled",
              "description": "Are reaction live updates enabled for this subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ReactionGroup",
                    "description": "A group of emoji reactions to a particular piece of content.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "content",
                  "description": "Allows filtering Reactions by emoji.",
                  "type": {
                    "kind": "ENUM",
                    "name": "ReactionContent",
                    "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Allows specifying the order in which reactions are returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ReactionOrder",
                    "description": "Ways in which lists of reactions can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactionConnection",
                  "description": "A list of reactions that have been left on the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionsWebsocket",
              "description": "The websocket channel ID for reaction live updates.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this reaction subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Future reaction subjects may not be scoped under repositories."
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CommitComment",
              "description": "Represents a comment on a given Commit.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IssueComment",
              "description": "Represents a comment on an Issue.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReviewComment",
              "description": "A review comment associated with a given repository pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "ReactionConnection",
          "kind": "OBJECT",
          "description": "A list of reactions that have been left on the subject.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactionEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Reaction",
                  "description": "An emoji reaction to a particular piece of content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerHasReacted",
              "description": "Whether or not the authenticated user has left a reaction on the subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReactionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Reaction",
                "description": "An emoji reaction to a particular piece of content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Reaction",
          "kind": "OBJECT",
          "description": "An emoji reaction to a particular piece of content.",
          "fields": [
            {
              "name": "content",
              "description": "Identifies the emoji reaction.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ReactionContent",
                  "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "user",
              "description": "Identifies the user who created this reaction.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReactionOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of reactions can be ordered upon return.",
          "fields": null,
          "inputFields": [
            {
              "name": "field",
              "description": "The field in which to order reactions by.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ReactionOrderField",
                  "description": "A list of fields that reactions can be ordered by.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "direction",
              "description": "The direction in which to order reactions by the specified field.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrderDirection",
                  "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "OrderDirection",
          "kind": "ENUM",
          "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ASC",
              "description": "Specifies an ascending order for a given `orderBy` argument.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DESC",
              "description": "Specifies a descending order for a given `orderBy` argument.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "ReactingUserConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactingUserEdge",
                  "description": "Represents a user that's made a reaction.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReactingUserEdge",
          "kind": "OBJECT",
          "description": "Represents a user that's made a reaction.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactedAt",
              "description": "The moment when the user made the reaction.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssueTimelineConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssueTimelineItem.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueTimelineItemEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "IssueTimelineItem",
                  "description": "An item in an issue/pull request timeline",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssueTimelineItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "IssueTimelineItem",
                "description": "An item in an issue/pull request timeline",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssueTimelineItem",
          "kind": "UNION",
          "description": "An item in an issue/pull request timeline",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Commit",
              "description": "Represents a Git commit.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReview",
              "description": "A review object for a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReviewThread",
              "description": "A threaded list of comments for a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReviewComment",
              "description": "A review comment associated with a given repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IssueComment",
              "description": "Represents a comment on an Issue.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ClosedEvent",
              "description": "Represents a 'closed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReopenedEvent",
              "description": "Represents a 'reopened' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "SubscribedEvent",
              "description": "Represents a 'subscribed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnsubscribedEvent",
              "description": "Represents a 'unsubscribed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MergedEvent",
              "description": "Represents a 'merged' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReferencedEvent",
              "description": "Represents a 'referenced' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MentionedEvent",
              "description": "Represents a 'mentioned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "AssignedEvent",
              "description": "Represents an 'assigned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnassignedEvent",
              "description": "Represents a 'unassigned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "LabeledEvent",
              "description": "Represents a 'labeled' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnlabeledEvent",
              "description": "Represents a 'unlabeled' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "MilestonedEvent",
              "description": "Represents a 'milestoned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DemilestonedEvent",
              "description": "Represents a 'demilestoned' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "RenamedEvent",
              "description": "Represents a 'renamed' event on a given issue or pull request or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "LockedEvent",
              "description": "Represents a 'locked' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnlockedEvent",
              "description": "Represents a 'unlocked' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "DeployedEvent",
              "description": "Represents a 'deployed' event on a given issue or pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefDeletedEvent",
              "description": "Represents a 'head_ref_deleted' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefRestoredEvent",
              "description": "Represents a 'head_ref_restored' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "HeadRefForcePushedEvent",
              "description": "Represents a 'head_ref_force_pushed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "BaseRefForcePushedEvent",
              "description": "Represents a 'base_ref_force_pushed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewRequestedEvent",
              "description": "Represents an 'review_requested' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewRequestRemovedEvent",
              "description": "Represents an 'review_request_removed' event on a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "ReviewDismissedEvent",
              "description": "Represents a 'review_dismissed' event on a given issue or pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "Commit",
          "kind": "OBJECT",
          "description": "Represents a Git commit.",
          "fields": [
            {
              "name": "author",
              "description": "Authorship details of the commit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GitActor",
                "description": "Represents an actor in a Git commit (ie. an author or committer).",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "blame",
              "description": "Fetches `git blame` information.",
              "args": [
                {
                  "name": "path",
                  "description": "The file whose Git blame information you want.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Blame",
                  "description": "Represents a Git blame.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comments",
              "description": "Comments made on the commit.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitCommentConnection",
                  "description": "The connection type for CommitComment.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "committedViaWeb",
              "description": "Check if commited via GitHub web UI.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "committer",
              "description": "Committership details of the commit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GitActor",
                "description": "Represents an actor in a Git commit (ie. an author or committer).",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "history",
              "description": "The linear commit history starting from (and including) this commit, in the same order as `git log`.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "path",
                  "description": "If non-null, filters history to only show commits touching files under this path.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "author",
                  "description": "If non-null, filters history to only show commits with matching authorship.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "CommitAuthor",
                    "description": "Specifies an author for filtering Git commits.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "since",
                  "description": "Allows specifying a beginning time or date for fetching commits.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "GitTimestamp",
                    "description": "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "until",
                  "description": "Allows specifying an ending time or date for fetching commits.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "GitTimestamp",
                    "description": "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitHistoryConnection",
                  "description": "The connection type for Commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "message",
              "description": "The Git commit message",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "messageBody",
              "description": "The Git commit message body",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "messageBodyHTML",
              "description": "The commit message body rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "messageHeadline",
              "description": "The Git commit message headline",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "messageHeadlineHTML",
              "description": "The commit message headline rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "GitObjectID",
                  "description": "A Git object ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this commit",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The Repository this commit belongs to",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signature",
              "description": "Commit signing information, if present.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "GitSignature",
                "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "status",
              "description": "Status information for this commit",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Status",
                "description": "Represents a commit status.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tree",
              "description": "Commit's root Tree",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Tree",
                  "description": "Represents a Git tree.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this commit",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "websocket",
              "description": "The websocket channel ID for live updates.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "GitObject",
              "description": "Represents a Git object.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Tree",
          "kind": "OBJECT",
          "description": "Represents a Git tree.",
          "fields": [
            {
              "name": "entries",
              "description": "A list of tree entries.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "TreeEntry",
                    "description": "Represents a Git tree entry.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "GitObjectID",
                  "description": "A Git object ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "GitObject",
              "description": "Represents a Git object.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "TreeEntry",
          "kind": "OBJECT",
          "description": "Represents a Git tree entry.",
          "fields": [
            {
              "name": "mode",
              "description": "Entry file mode.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Entry file name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "object",
              "description": "Entry file object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "GitObject",
                  "description": "Represents a Git object.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "oid",
              "description": "Entry file Git object ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "GitObjectID",
                  "description": "A Git object ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The Repository the tree entry belongs to",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Entry file type.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GitActor",
          "kind": "OBJECT",
          "description": "Represents an actor in a Git commit (ie. an author or committer).",
          "fields": [
            {
              "name": "avatarURL",
              "description": "A URL pointing to the author's public avatar.",
              "args": [
                {
                  "name": "size",
                  "description": "The size of the resulting square image.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "date",
              "description": "The timestamp of the Git action (authoring or committing).",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "GitTimestamp",
                "description": "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "email",
              "description": "The email in the Git commit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name in the Git commit.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "user",
              "description": "The GitHub user corresponding to the email field. Null if no such user exists.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GitTimestamp",
          "kind": "SCALAR",
          "description": "An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommitHistoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Commit.",
          "fields": [
            {
              "name": "edges",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommitEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Commit",
                "description": "Represents a Git commit.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommitAuthor",
          "kind": "INPUT_OBJECT",
          "description": "Specifies an author for filtering Git commits.",
          "fields": null,
          "inputFields": [
            {
              "name": "id",
              "description": "ID of a User to filter by. If non-null, only commits authored by this user will be returned. This field takes precedence over emails.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "emails",
              "description": "Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.",
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  }
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommitCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for CommitComment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitCommentEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitComment",
                  "description": "Represents a comment on a given Commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommitCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "CommitComment",
                "description": "Represents a comment on a given Commit.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommitComment",
          "kind": "OBJECT",
          "description": "Represents a comment on a given Commit.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "Identifies the comment body.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "Identifies the comment body rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "editor",
              "description": "The editor of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "liveReactionUpdatesEnabled",
              "description": "Are reaction live updates enabled for this subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "Identifies the file path associated with the comment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "position",
              "description": "Identifies the line position associated with the comment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ReactionGroup",
                    "description": "A group of emoji reactions to a particular piece of content.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "content",
                  "description": "Allows filtering Reactions by emoji.",
                  "type": {
                    "kind": "ENUM",
                    "name": "ReactionContent",
                    "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Allows specifying the order in which reactions are returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ReactionOrder",
                    "description": "Ways in which lists of reactions can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactionConnection",
                  "description": "A list of reactions that have been left on the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionsWebsocket",
              "description": "The websocket channel ID for reaction live updates.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "user",
              "description": "Identifies the user who created the comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use `author`."
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Comment",
              "description": "Represents a comment.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Comment",
          "kind": "INTERFACE",
          "description": "Represents a comment.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "The comment body as Markdown.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "The comment body rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "editor",
              "description": "The editor of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CommitComment",
              "description": "Represents a comment on a given Commit.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "GistComment",
              "description": "Represents a comment on an Gist.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IssueComment",
              "description": "Represents a comment on an Issue.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReview",
              "description": "A review object for a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReviewComment",
              "description": "A review comment associated with a given repository pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "RepositoryNode",
          "kind": "INTERFACE",
          "description": "Represents a object that belongs to a repository.",
          "fields": [
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "CommitComment",
              "description": "Represents a comment on a given Commit.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "IssueComment",
              "description": "Represents a comment on an Issue.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReview",
              "description": "A review object for a given pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequestReviewComment",
              "description": "A review comment associated with a given repository pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "GitSignature",
          "kind": "INTERFACE",
          "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "GitSignatureState",
                  "description": "The state of a Git signature.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "GpgSignature",
              "description": "Represents a GPG signature on a Commit or Tag.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "SmimeSignature",
              "description": "Represents an S/MIME signature on a Commit or Tag.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "UnknownSignature",
              "description": "Represents an unknown signature on a Commit or Tag.",
              "ofType": null
            }
          ]
        },
        {
          "name": "GitSignatureState",
          "kind": "ENUM",
          "description": "The state of a Git signature.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "VALID",
              "description": "Valid signature and verified by GitHub.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INVALID",
              "description": "Invalid signature.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MALFORMED_SIG",
              "description": "Malformed signature.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_KEY",
              "description": "Key used for signing not known to GitHub.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BAD_EMAIL",
              "description": "Invalid email used for signing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNVERIFIED_EMAIL",
              "description": "Email used for signing unverified on GitHub.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NO_USER",
              "description": "Email used for signing not known to GitHub.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNKNOWN_SIG_TYPE",
              "description": "Unknown signature type.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNSIGNED",
              "description": "Unsigned.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GPGVERIFY_UNAVAILABLE",
              "description": "Internal error - the GPG verification service is unavailable at the moment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "GPGVERIFY_ERROR",
              "description": "Internal error - the GPG verification service misbehaved.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOT_SIGNING_KEY",
              "description": "The usage flags for the key that signed this don't allow signing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "EXPIRED_KEY",
              "description": "Signing key expired.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "Status",
          "kind": "OBJECT",
          "description": "Represents a commit status.",
          "fields": [
            {
              "name": "commit",
              "description": "The commit this status is attached to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Commit",
                "description": "Represents a Git commit.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "context",
              "description": "Looks up an individual status context by context name.",
              "args": [
                {
                  "name": "name",
                  "description": "The context name.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "StatusContext",
                "description": "Represents an individual commit status context",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "contexts",
              "description": "The individual status contexts for this commit.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "StatusContext",
                      "description": "Represents an individual commit status context",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The combined commit status.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "StatusState",
                  "description": "The possible commit status states.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "StatusState",
          "kind": "ENUM",
          "description": "The possible commit status states.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "EXPECTED",
              "description": "Status is expected.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ERROR",
              "description": "Status is errored.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FAILURE",
              "description": "Status is failing.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PENDING",
              "description": "Status is pending.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUCCESS",
              "description": "Status is successful.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "StatusContext",
          "kind": "OBJECT",
          "description": "Represents an individual commit status context",
          "fields": [
            {
              "name": "commit",
              "description": "This commit this status context is attached to.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Commit",
                "description": "Represents a Git commit.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "context",
              "description": "The name of this status context.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "creator",
              "description": "The author of this status context.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description for this status context.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The state of this status context.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "StatusState",
                  "description": "The possible commit status states.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "targetURL",
              "description": "The URL for this status context.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Blame",
          "kind": "OBJECT",
          "description": "Represents a Git blame.",
          "fields": [
            {
              "name": "ranges",
              "description": "The list of ranges from a Git blame.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BlameRange",
                      "description": "Represents a range of information from a Git blame.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "BlameRange",
          "kind": "OBJECT",
          "description": "Represents a range of information from a Git blame.",
          "fields": [
            {
              "name": "age",
              "description": "Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commit",
              "description": "Identifies the line author",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "endingLine",
              "description": "The ending line for the range",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "startingLine",
              "description": "The starting line for the range",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestReview",
          "kind": "OBJECT",
          "description": "A review object for a given pull request.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "Identifies the pull request review body.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "The body of this review rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyText",
              "description": "The body of this review rendered as plain text.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comments",
              "description": "A list of review comments for the current pull request review.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewCommentConnection",
                  "description": "The connection type for PullRequestReviewComment.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with this pull request review.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Commit",
                "description": "Represents a Git commit.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "editor",
              "description": "The editor of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP URL permalink for this PullRequestReview.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequest",
              "description": "Identifies the pull request associated with this pull request review.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequest",
                  "description": "A repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "Identifies the current state of the pull request review.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PullRequestReviewState",
                  "description": "The possible states of a pull request review.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "submittedAt",
              "description": "Identifies when the Pull Request Review was submitted",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP URL permalink for this PullRequestReview.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Comment",
              "description": "Represents a comment.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewState",
          "kind": "ENUM",
          "description": "The possible states of a pull request review.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "PENDING",
              "description": "A review that has not yet been submitted.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COMMENTED",
              "description": "An informational review.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPROVED",
              "description": "A review allowing the pull request to merge.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CHANGES_REQUESTED",
              "description": "A review blocking the pull request from merging.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISMISSED",
              "description": "A review that has been dismissed.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestReviewComment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewCommentEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewComment",
                  "description": "A review comment associated with a given repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PullRequestReviewComment",
                "description": "A review comment associated with a given repository pull request.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewComment",
          "kind": "OBJECT",
          "description": "A review comment associated with a given repository pull request.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "The comment body of this review comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "The comment body of this review comment rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyText",
              "description": "The comment body of this review comment rendered as plain text.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies when the comment was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "diffHunk",
              "description": "The diff hunk to which the comment applies.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "editor",
              "description": "The editor of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "liveReactionUpdatesEnabled",
              "description": "Are reaction live updates enabled for this subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "originalCommit",
              "description": "Identifies the original commit associated with the comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "originalPosition",
              "description": "The original line index in the diff to which the comment applies.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The path to which the comment applies.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "position",
              "description": "The line index in the diff to which the comment applies.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequest",
              "description": "The pull request associated with this review comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequest",
                  "description": "A repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReview",
              "description": "The pull request review associated with this review comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ReactionGroup",
                    "description": "A group of emoji reactions to a particular piece of content.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "content",
                  "description": "Allows filtering Reactions by emoji.",
                  "type": {
                    "kind": "ENUM",
                    "name": "ReactionContent",
                    "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Allows specifying the order in which reactions are returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ReactionOrder",
                    "description": "Ways in which lists of reactions can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactionConnection",
                  "description": "A list of reactions that have been left on the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionsWebsocket",
              "description": "The websocket channel ID for reaction live updates.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this review comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies when the comment was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP URL permalink for this review comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "websocket",
              "description": "The websocket channel ID for live updates.",
              "args": [
                {
                  "name": "channel",
                  "description": "The channel to use.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "PullRequestPubSubTopic",
                      "description": "The possible PubSub channels for a pull request.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Comment",
              "description": "Represents a comment.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestPubSubTopic",
          "kind": "ENUM",
          "description": "The possible PubSub channels for a pull request.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "UPDATED",
              "description": "The channel ID for observing pull request updates.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MARKASREAD",
              "description": "The channel ID for marking an pull request as read.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewThread",
          "kind": "OBJECT",
          "description": "A threaded list of comments for a given pull request.",
          "fields": [
            {
              "name": "comments",
              "description": "A list of pull request comments associated with the thread.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewCommentConnection",
                  "description": "The connection type for PullRequestReviewComment.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequest",
              "description": "Identifies the pull request associated with this thread.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequest",
                  "description": "A repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssueComment",
          "kind": "OBJECT",
          "description": "Represents a comment on an Issue.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "Identifies the comment body.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "The comment body rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "editor",
              "description": "The editor of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "liveReactionUpdatesEnabled",
              "description": "Are reaction live updates enabled for this subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionGroups",
              "description": "A list of reactions grouped by content left on the subject.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "ReactionGroup",
                    "description": "A group of emoji reactions to a particular piece of content.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactions",
              "description": "A list of Reactions left on the Issue.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "content",
                  "description": "Allows filtering Reactions by emoji.",
                  "type": {
                    "kind": "ENUM",
                    "name": "ReactionContent",
                    "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Allows specifying the order in which reactions are returned.",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ReactionOrder",
                    "description": "Ways in which lists of reactions can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReactionConnection",
                  "description": "A list of reactions that have been left on the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reactionsWebsocket",
              "description": "The websocket channel ID for reaction live updates.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this node.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanReact",
              "description": "Can user react to this subject",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "websocket",
              "description": "The websocket channel ID for live updates.",
              "args": [
                {
                  "name": "channel",
                  "description": "The channel to use.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "IssuePubSubTopic",
                      "description": "The possible PubSub channels for an issue.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Comment",
              "description": "Represents a comment.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Reactable",
              "description": "Represents a subject that can be reacted on.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryNode",
              "description": "Represents a object that belongs to a repository.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssuePubSubTopic",
          "kind": "ENUM",
          "description": "The possible PubSub channels for an issue.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "UPDATED",
              "description": "The channel ID for observing issue updates.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MARKASREAD",
              "description": "The channel ID for marking an issue as read.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "ClosedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'closed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the 'closed' event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Commit",
                "description": "Represents a Git commit.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReopenedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'reopened' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "SubscribedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'subscribed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UnsubscribedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'unsubscribed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MergedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'merged' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the `merge` event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mergeRef",
              "description": "Identifies the Ref associated with the `merge` event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mergeRefName",
              "description": "Identifies the name of the Ref associated with the `merge` event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReferencedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'referenced' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commit",
              "description": "Identifies the commit associated with the 'referenced' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commitRepository",
              "description": "Identifies the repository associated with the 'referenced' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MentionedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'mentioned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AssignedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'assigned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "Identifies the user who performed the 'assigned' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UnassignedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'unassigned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "Identifies the user who performed the 'unassigned' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LabeledEvent",
          "kind": "OBJECT",
          "description": "Represents a 'labeled' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "label",
              "description": "Identifies the label associated with the 'labeled' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Label",
                  "description": "A label for categorizing Issues or Milestones with a given Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UnlabeledEvent",
          "kind": "OBJECT",
          "description": "Represents a 'unlabeled' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "label",
              "description": "Identifies the label associated with the 'unlabeled' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Label",
                  "description": "A label for categorizing Issues or Milestones with a given Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MilestonedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'milestoned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "milestoneTitle",
              "description": "Identifies the milestone title associated with the 'milestoned' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DemilestonedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'demilestoned' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "milestoneTitle",
              "description": "Identifies the milestone title associated with the 'demilestoned' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RenamedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'renamed' event on a given issue or pull request or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "currentTitle",
              "description": "Identifies the current title of the issue or pull request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "previousTitle",
              "description": "Identifies the previous title of the issue or pull request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LockedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'locked' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UnlockedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'unlocked' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeployedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'deployed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deployment",
              "description": "The deployment associated with the 'deployed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Deployment",
                  "description": "Represents triggered deployment instance.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ref",
              "description": "The ref associated with the 'deployed' event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Deployment",
          "kind": "OBJECT",
          "description": "Represents triggered deployment instance.",
          "fields": [
            {
              "name": "commit",
              "description": "Identifies the commit sha of the deployment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "creator",
              "description": "Identifies the user who triggered the deployment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the deployment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "statuses",
              "description": "A list of statuses associated with the deployment.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeploymentStatusConnection",
                "description": "The connection type for DeploymentStatus.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeploymentStatusConnection",
          "kind": "OBJECT",
          "description": "The connection type for DeploymentStatus.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DeploymentStatusEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "DeploymentStatus",
                  "description": "Describes the status of a given deployment attempt.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeploymentStatusEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "DeploymentStatus",
                "description": "Describes the status of a given deployment attempt.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeploymentStatus",
          "kind": "OBJECT",
          "description": "Describes the status of a given deployment attempt.",
          "fields": [
            {
              "name": "creator",
              "description": "Identifies the user who triggered the deployment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deployment",
              "description": "Identifies the deployment associated with status.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Deployment",
                  "description": "Represents triggered deployment instance.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Identifies the description of the deployment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "environmentUrl",
              "description": "Identifies the environment url of the deployment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "logUrl",
              "description": "Identifies the log url of the deployment.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "Identifies the current state of the deployment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "DeploymentState",
                  "description": "The possible deployment states.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "HeadRefDeletedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_deleted' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "headRef",
              "description": "Identifies the Ref associated with the `head_ref_deleted` event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "headRefName",
              "description": "Identifies the name of the Ref associated with the `head_ref_deleted` event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "HeadRefRestoredEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_restored' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "HeadRefForcePushedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'head_ref_force_pushed' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "afterCommit",
              "description": "Identifies the after commit SHA for the 'head_ref_force_pushed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "beforeCommit",
              "description": "Identifies the before commit SHA for the 'head_ref_force_pushed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ref",
              "description": "Identifies the fully qualified ref name for the 'head_ref_force_pushed' event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "BaseRefForcePushedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'base_ref_force_pushed' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "afterCommit",
              "description": "Identifies the after commit SHA for the 'base_ref_force_pushed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "beforeCommit",
              "description": "Identifies the before commit SHA for the 'base_ref_force_pushed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ref",
              "description": "Identifies the fully qualified ref name for the 'base_ref_force_pushed' event.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewRequestedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'review_requested' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "Identifies the user who performed the 'review_requested' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewRequestRemovedEvent",
          "kind": "OBJECT",
          "description": "Represents an 'review_request_removed' event on a given pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "Identifies the user who performed the 'review_request_removed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewDismissedEvent",
          "kind": "OBJECT",
          "description": "Represents a 'review_dismissed' event on a given issue or pull request.",
          "fields": [
            {
              "name": "actor",
              "description": "Identifies the actor (user) associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issue",
              "description": "Identifies the issue associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Issue",
                  "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "message",
              "description": "Identifies the message associated with the 'review_dismissed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "previousReviewState",
              "description": "Identifies the previous state of the review with the 'review_dismissed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PullRequestReviewState",
                  "description": "The possible states of a pull request review.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "review",
              "description": "Identifies the review associated with the 'review_dismissed' event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": "Identifies the event type associated with the event.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "IssueEventType",
                  "description": "The possible issue event types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "IssueEvent",
              "description": "Represents an issue event.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RepositoryOwner",
          "kind": "INTERFACE",
          "description": "Represents an owner of a Repository.",
          "fields": [
            {
              "name": "avatarURL",
              "description": "A URL pointing to the owner's public avatar.",
              "args": [
                {
                  "name": "size",
                  "description": "The size of the resulting square image.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gist",
              "description": "Find gist by repo name.",
              "args": [
                {
                  "name": "name",
                  "description": "The gist name to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Gist",
                "description": "A Gist.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gists",
              "description": "A list of the Gists the user has created.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "visibility",
                  "description": "Allows filtering by gist visibility.",
                  "type": {
                    "kind": "ENUM",
                    "name": "GistVisibility",
                    "description": "The possible Gist visibility types",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GistConnection",
                  "description": "The connection type for Gist.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "login",
              "description": "The username used to login.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP url for the owner.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repositories",
              "description": "A list of repositories that the user owns.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "privacy",
                  "description": "If non-null, filters repositories according to privacy",
                  "type": {
                    "kind": "ENUM",
                    "name": "RepositoryPrivacy",
                    "description": "The privacy of a repository",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "isFork",
                  "description": "If non-null, filters repositories according to whether they are forks of another repository",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for repositories returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "RepositoryOrder",
                    "description": "Ordering options for repository connections",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "affiliation",
                  "description": "Affiliation options for repositories returned from the connection",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RepositoryAffiliation",
                      "description": "The affiliation of a user to a repository",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "isLocked",
                  "description": "If non-null, filters repositories according to whether they have been locked",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryConnection",
                  "description": "A list of repositories owned by the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Find Repository.",
              "args": [
                {
                  "name": "name",
                  "description": "Name of Repository to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Repository",
                "description": "A repository contains the content for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for the owner.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Organization",
              "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "User",
              "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
              "ofType": null
            }
          ]
        },
        {
          "name": "RepositoryConnection",
          "kind": "OBJECT",
          "description": "A list of repositories owned by the subject.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalDiskUsage",
              "description": "The total size in kilobytes of all repositories in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RepositoryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Repository",
                "description": "A repository contains the content for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RepositoryPrivacy",
          "kind": "ENUM",
          "description": "The privacy of a repository",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "PUBLIC",
              "description": "Public",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PRIVATE",
              "description": "Private",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "RepositoryOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for repository connections",
          "fields": null,
          "inputFields": [
            {
              "name": "field",
              "description": "The field to order repositories by.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "RepositoryOrderField",
                  "description": "Properties by which repository connections can be ordered.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "direction",
              "description": "The ordering direction.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrderDirection",
                  "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RepositoryOrderField",
          "kind": "ENUM",
          "description": "Properties by which repository connections can be ordered.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT",
              "description": "Order repositories by creation time",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT",
              "description": "Order repositories by update time",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "PUSHED_AT",
              "description": "Order repositories by push time",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAME",
              "description": "Order repositories by name",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "RepositoryAffiliation",
          "kind": "ENUM",
          "description": "The affiliation of a user to a repository",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "OWNER",
              "description": "Repositories that are owned by the authenticated user.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "COLLABORATOR",
              "description": "Repositories that the user has been added to as a collaborator.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ORGANIZATION_MEMBER",
              "description": "Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "Gist",
          "kind": "OBJECT",
          "description": "A Gist.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The gist description.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The gist name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "owner",
              "description": "The gist owner.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "RepositoryOwner",
                "description": "Represents an owner of a Repository.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "public",
              "description": "Whether the gist is public or not.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GistConnection",
          "kind": "OBJECT",
          "description": "The connection type for Gist.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GistEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Gist",
                  "description": "A Gist.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GistEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Gist",
                "description": "A Gist.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GistVisibility",
          "kind": "ENUM",
          "description": "The possible Gist visibility types",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "PUBLIC",
              "description": "Gists that are public",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SECRET",
              "description": "Gists that are secret",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ALL",
              "description": "Gists that are public and secret",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "PullRequestState",
          "kind": "ENUM",
          "description": "The possible states of a pull request.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "OPEN",
              "description": "A pull request that is still open.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLOSED",
              "description": "A pull request that has been closed without being merged.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MERGED",
              "description": "A pull request that has been closed by being merged.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "IssueCommentConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssueComment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueCommentEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueComment",
                  "description": "Represents a comment on an Issue.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "IssueCommentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "IssueComment",
                "description": "Represents a comment on an Issue.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewConnection",
          "kind": "OBJECT",
          "description": "The connection type for PullRequestReview.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "PullRequestReview",
                "description": "A review object for a given pull request.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CommitConnection",
          "kind": "OBJECT",
          "description": "The connection type for Commit.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "CommitEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Commit",
                  "description": "Represents a Git commit.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewRequestConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReviewRequest.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReviewRequestEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReviewRequest",
                  "description": "A request for a user to review a pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ReviewRequest",
                "description": "A request for a user to review a pull request.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewRequest",
          "kind": "OBJECT",
          "description": "A request for a user to review a pull request.",
          "fields": [
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequest",
              "description": "Identifies the pull request associated with this review request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequest",
                  "description": "A repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reviewer",
              "description": "Identifies the author associated with this review request.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Issueish",
          "kind": "INTERFACE",
          "description": "Shared features of Issues and Pull Requests.",
          "fields": [
            {
              "name": "assignees",
              "description": "A list of Users assigned to the Issue or Pull Request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "author",
              "description": "The author of the issue or pull request.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "Identifies the body of the issue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "Identifies the body of the issue rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "labels",
              "description": "A list of labels associated with the Issue or Pull Request.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "LabelConnection",
                "description": "The connection type for Label.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": "Identifies the issue number.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Identifies the repository associated with the issue.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "title",
              "description": "Identifies the issue title.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "Timeline",
          "kind": "INTERFACE",
          "description": "Represents all of the events visible to a user from an Issue or PullRequest timeline.",
          "fields": [
            {
              "name": "timeline",
              "description": "A list of events associated with an Issue or PullRequest.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "since",
                  "description": "Allows filtering timeline events by a `since` timestamp.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueTimelineConnection",
                  "description": "The connection type for IssueTimelineItem.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "UniformResourceLocatable",
          "kind": "INTERFACE",
          "description": "Represents a type that can be retrieved by a URL.",
          "fields": [
            {
              "name": "path",
              "description": "The path to this resource.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The URL to this resource.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Bot",
              "description": "A special type of user which takes actions on behalf of integrations.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Organization",
              "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Release",
              "description": "A release contains the content for a release.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Repository",
              "description": "A repository contains the content for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Team",
              "description": "A team of users in an organization.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "User",
              "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
              "ofType": null
            }
          ]
        },
        {
          "name": "ReleaseAssetConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReleaseAsset.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReleaseAssetEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReleaseAsset",
                  "description": "A release asset contains the content for a release asset.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReleaseAssetEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ReleaseAsset",
                "description": "A release asset contains the content for a release asset.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReleaseAsset",
          "kind": "OBJECT",
          "description": "A release asset contains the content for a release asset.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Identifies the title of the release asset.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "release",
              "description": "release that the asset is associated with",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Release",
                "description": "A release contains the content for a release.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "Identifies the url of the release asset.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Float",
          "kind": "SCALAR",
          "description": "Represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Organization",
          "kind": "OBJECT",
          "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
          "fields": [
            {
              "name": "avatarURL",
              "description": "A URL pointing to the organization's public avatar.",
              "args": [
                {
                  "name": "size",
                  "description": "The size of the resulting square image.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gist",
              "description": "Find gist by repo name.",
              "args": [
                {
                  "name": "name",
                  "description": "The gist name to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Gist",
                "description": "A Gist.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "gists",
              "description": "A list of the Gists the user has created.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "visibility",
                  "description": "Allows filtering by gist visibility.",
                  "type": {
                    "kind": "ENUM",
                    "name": "GistVisibility",
                    "description": "The possible Gist visibility types",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "GistConnection",
                  "description": "The connection type for Gist.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "login",
              "description": "The username used to login.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "members",
              "description": "A list of users who are members of this organization.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserConnection",
                  "description": "The connection type for User.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The organization's public profile name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "Find project by number.",
              "args": [
                {
                  "name": "number",
                  "description": "The project number to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "description": "Projects manage issues, pull requests and notes within a project owner.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projects",
              "description": "A list of projects under the owner.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for projects returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectOrder",
                    "description": "Ways in which lists of projects can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "search",
                  "description": "Query to search projects by, currently only searching by name.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the projects by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectState",
                        "description": "State of the project; either 'open' or 'closed'",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectConnection",
                  "description": "The connection type for Project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsPath",
              "description": "The HTTP path listing organization's projects",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsUrl",
              "description": "The HTTP url listing organization's projects",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repositories",
              "description": "A list of repositories that the user owns.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "privacy",
                  "description": "If non-null, filters repositories according to privacy",
                  "type": {
                    "kind": "ENUM",
                    "name": "RepositoryPrivacy",
                    "description": "The privacy of a repository",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "isFork",
                  "description": "If non-null, filters repositories according to whether they are forks of another repository",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for repositories returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "RepositoryOrder",
                    "description": "Ordering options for repository connections",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "affiliation",
                  "description": "Affiliation options for repositories returned from the connection",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "RepositoryAffiliation",
                      "description": "The affiliation of a user to a repository",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "isLocked",
                  "description": "If non-null, filters repositories according to whether they have been locked",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryConnection",
                  "description": "A list of repositories owned by the subject.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Find Repository.",
              "args": [
                {
                  "name": "name",
                  "description": "Name of Repository to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Repository",
                "description": "A repository contains the content for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "team",
              "description": "Find an organization's team by its slug.",
              "args": [
                {
                  "name": "slug",
                  "description": "The name or slug of the team to find.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Team",
                "description": "A team of users in an organization.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teams",
              "description": "A list of teams in this organization.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "privacy",
                  "description": "If non-null, filters teams according to privacy",
                  "type": {
                    "kind": "ENUM",
                    "name": "TeamPrivacy",
                    "description": "The possible team privacy values.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "role",
                  "description": "If non-null, filters teams according to whether the viewer is an admin or member on team",
                  "type": {
                    "kind": "ENUM",
                    "name": "TeamRole",
                    "description": "The role of a user on a team.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "query",
                  "description": "If non-null, filters teams with query on team name and team slug",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for teams returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "TeamOrder",
                    "description": "Ways in which team connections can be ordered.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TeamConnection",
                  "description": "The connection type for Team.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamsPath",
              "description": "The HTTP path listing organization's teams",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamsUrl",
              "description": "The HTTP url listing organization's teams",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this user",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanCreateProjects",
              "description": "Can the current viewer create new projects on this owner.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanCreateRepositories",
              "description": "Viewer can create repositories on this organization",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "ProjectOwner",
              "description": "Represents an owner of a Project.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "RepositoryOwner",
              "description": "Represents an owner of a Repository.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectConnection",
          "kind": "OBJECT",
          "description": "The connection type for Project.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Project",
                  "description": "Projects manage issues, pull requests and notes within a project owner.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "description": "Projects manage issues, pull requests and notes within a project owner.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which lists of projects can be ordered upon return.",
          "fields": null,
          "inputFields": [
            {
              "name": "field",
              "description": "The field in which to order projects by.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ProjectOrderField",
                  "description": "Properties by which project connections can be ordered.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "direction",
              "description": "The direction in which to order projects by the specified field.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrderDirection",
                  "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectOrderField",
          "kind": "ENUM",
          "description": "Properties by which project connections can be ordered.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CREATED_AT",
              "description": "Order projects by creation time",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UPDATED_AT",
              "description": "Order projects by update time",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NAME",
              "description": "Order projects by name",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "X509Certificate",
          "kind": "SCALAR",
          "description": "A valid x509 certificate string",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DefaultRepositoryPermissionField",
          "kind": "ENUM",
          "description": "The possible default permissions for organization-owned repositories.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "READ",
              "description": "Members have read access to org repos by default",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "WRITE",
              "description": "Members have read and write access to org repos by default",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADMIN",
              "description": "Members have read, write, and admin access to org repos by default",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "OrganizationInvitationConnection",
          "kind": "OBJECT",
          "description": "The connection type for OrganizationInvitation.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrganizationInvitationEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrganizationInvitation",
                  "description": "An Invitation for a user to an organization.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "OrganizationInvitationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "OrganizationInvitation",
                "description": "An Invitation for a user to an organization.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "OrganizationInvitation",
          "kind": "OBJECT",
          "description": "An Invitation for a user to an organization.",
          "fields": [
            {
              "name": "email",
              "description": "The email address of the user invited to the organization.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inviter",
              "description": "The user who created the invitation.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "login",
              "description": "The login of the user invited to the organization.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "role",
              "description": "The user's pending role in the organization (e.g. member, owner).",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrganizationInvitationRole",
                  "description": "The possible organization invitation roles.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "OrganizationInvitationRole",
          "kind": "ENUM",
          "description": "The possible organization invitation roles.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "DIRECT_MEMBER",
              "description": "The user is invited to be a direct member of the organization.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ADMIN",
              "description": "The user is invited to be an admin of the organization.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BILLING_MANAGER",
              "description": "The user is invited to be a billing manager of the organization.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REINSTATE",
              "description": "The user's previous role will be reinstated.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "Team",
          "kind": "OBJECT",
          "description": "A team of users in an organization.",
          "fields": [
            {
              "name": "description",
              "description": "The description of the team.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "editTeamPath",
              "description": "The HTTP path for editing this team",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "editTeamUrl",
              "description": "The HTTP url for editing this team",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "invitations",
              "description": "A list of pending invitations for users to this team",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "OrganizationInvitationConnection",
                "description": "The connection type for OrganizationInvitation.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the team.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The path to this resource.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "privacy",
              "description": "The level of privacy the team has.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "TeamPrivacy",
                  "description": "The possible team privacy values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "slug",
              "description": "The slug corresponding to the team.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamPath",
              "description": "The HTTP path for this team",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamRepositoriesPath",
              "description": "The HTTP path for this team's repositories",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamRepositoriesUrl",
              "description": "The HTTP url for this team's repositories",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "teamUrl",
              "description": "The HTTP url for this team",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The URL to this resource.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "TeamPrivacy",
          "kind": "ENUM",
          "description": "The possible team privacy values.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SECRET",
              "description": "A secret team can only be seen by its members.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "VISIBLE",
              "description": "A visible team can be seen and @mentioned by every member of the organization.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "MemberOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which member connections can be ordered.",
          "fields": null,
          "inputFields": [
            {
              "name": "field",
              "description": "The field in which to order nodes by.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "UserOrderField",
                  "description": "Properties by which user connections can be ordered.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "direction",
              "description": "The direction in which to order nodes.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrderDirection",
                  "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UserOrderField",
          "kind": "ENUM",
          "description": "Properties by which user connections can be ordered.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "LOGIN",
              "description": "Allows ordering a list of users by their login.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ACTION",
              "description": "Allows ordering a list of users by their ability action",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "TeamConnection",
          "kind": "OBJECT",
          "description": "The connection type for Team.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "TeamEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Team",
                  "description": "A team of users in an organization.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "TeamEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Team",
                "description": "A team of users in an organization.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "TeamOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which team connections can be ordered.",
          "fields": null,
          "inputFields": [
            {
              "name": "field",
              "description": "The field in which to order nodes by.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "TeamOrderField",
                  "description": "Properties by which team connections can be ordered.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "direction",
              "description": "The direction in which to order nodes.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrderDirection",
                  "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "TeamOrderField",
          "kind": "ENUM",
          "description": "Properties by which team connections can be ordered.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "NAME",
              "description": "Allows ordering a list of teams by name.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "TeamRole",
          "kind": "ENUM",
          "description": "The role of a user on a team.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ADMIN",
              "description": "User has admin rights on the team.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MEMBER",
              "description": "User is a member of the team.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "ProjectOwner",
          "kind": "INTERFACE",
          "description": "Represents an owner of a Project.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "Find project by number.",
              "args": [
                {
                  "name": "number",
                  "description": "The project number to find.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Project",
                "description": "Projects manage issues, pull requests and notes within a project owner.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projects",
              "description": "A list of projects under the owner.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "orderBy",
                  "description": "Ordering options for projects returned from the connection",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "ProjectOrder",
                    "description": "Ways in which lists of projects can be ordered upon return.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "search",
                  "description": "Query to search projects by, currently only searching by name.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "states",
                  "description": "A list of states to filter the projects by.",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "ProjectState",
                        "description": "State of the project; either 'open' or 'closed'",
                        "ofType": null
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectConnection",
                  "description": "The connection type for Project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsPath",
              "description": "The HTTP path listing owners projects",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectsUrl",
              "description": "The HTTP url listing owners projects",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanCreateProjects",
              "description": "Can the current viewer create new projects on this owner.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Organization",
              "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Repository",
              "description": "A repository contains the content for a project.",
              "ofType": null
            }
          ]
        },
        {
          "name": "FollowingConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "FollowerConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "OrganizationConnection",
          "kind": "OBJECT",
          "description": "The connection type for Organization.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "OrganizationEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Organization",
                  "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "OrganizationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Organization",
                "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "StarredRepositoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for Repository.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StarredRepositoryEdge",
                  "description": "Represents a starred repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "StarredRepositoryEdge",
          "kind": "OBJECT",
          "description": "Represents a starred repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "starredAt",
              "description": "Identifies when the item was starred.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "StarOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ways in which star connections can be ordered.",
          "fields": null,
          "inputFields": [
            {
              "name": "field",
              "description": "The field in which to order nodes by.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "StarOrderField",
                  "description": "Properties by which star connections can be ordered.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "direction",
              "description": "The direction in which to order nodes.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrderDirection",
                  "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "StarOrderField",
          "kind": "ENUM",
          "description": "Properties by which star connections can be ordered.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "STARRED_AT",
              "description": "Allows ordering a list of stars by when they were created.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "ProjectColumnConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProjectColumn.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumnEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumn",
                  "description": "A column inside a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectColumnEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectColumn",
                "description": "A column inside a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectColumn",
          "kind": "OBJECT",
          "description": "A column inside a project.",
          "fields": [
            {
              "name": "cards",
              "description": "List of cards in the column",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCardConnection",
                  "description": "The connection type for ProjectCard.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The project column's name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "The project that contains this column.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Project",
                  "description": "Projects manage issues, pull requests and notes within a project owner.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectCardConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProjectCard.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCardEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCard",
                  "description": "A card in a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectCardEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProjectCard",
                "description": "A card in a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectCard",
          "kind": "OBJECT",
          "description": "A card in a project.",
          "fields": [
            {
              "name": "content",
              "description": "The card content item",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "ProjectCardItem",
                "description": "Types that can be inside Project Cards.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "creator",
              "description": "The user who created this card",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "databaseId",
              "description": "Identifies the primary key from the database.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "isDeprecated": true,
              "deprecationReason": "Exposed database IDs will eventually be removed in favor of global Relay IDs."
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "note",
              "description": "The card note",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectColumn",
              "description": "The column that contains this card.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumn",
                  "description": "A column inside a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The state of ProjectCard",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "ProjectCardState",
                "description": "Various content states of a ProjectCard",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProjectCardState",
          "kind": "ENUM",
          "description": "Various content states of a ProjectCard",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "CONTENT_ONLY",
              "description": "The card has content only.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NOTE_ONLY",
              "description": "The card has a note only.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REDACTED",
              "description": "The card is redacted.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "ProjectCardItem",
          "kind": "UNION",
          "description": "Types that can be inside Project Cards.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            }
          ]
        },
        {
          "name": "SubscriptionState",
          "kind": "ENUM",
          "description": "The possible states of a subscription.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "UNSUBSCRIBED",
              "description": "The User is only notified when particpating or @mentioned.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIBED",
              "description": "The User is notified of all conversations.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "IGNORED",
              "description": "The User is never notified.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "RepositoryLockReason",
          "kind": "ENUM",
          "description": "The possible reasons a given repsitory could be in a locked state.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "MOVING",
              "description": "The repository is locked due to a move.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "BILLING",
              "description": "The repository is locked due to a billing related reason.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "RENAME",
              "description": "The repository is locked due to a rename.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MIGRATING",
              "description": "The repository is locked due to a migration.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "RepositoryCollaboratorAffiliation",
          "kind": "ENUM",
          "description": "The affiliation type between collaborator and repository.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ALL",
              "description": "All collaborators of the repository.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OUTSIDE",
              "description": "All outside collaborators of an organization-owned repository.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "IssueState",
          "kind": "ENUM",
          "description": "The possible states of an issue.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "OPEN",
              "description": "An issue that is still open",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLOSED",
              "description": "An issue that has been closed",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "ProtectedBranchConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProtectedBranch.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProtectedBranchEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProtectedBranch",
                  "description": "A repository protected branch.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProtectedBranchEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ProtectedBranch",
                "description": "A repository protected branch.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ProtectedBranch",
          "kind": "OBJECT",
          "description": "A repository protected branch.",
          "fields": [
            {
              "name": "authorizedActorsOnly",
              "description": "Check if authorizing actors for pushing is turned on.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "authorizedDismissalActorsOnly",
              "description": "Check if authorizing dismissers is turned on.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "blockDeletionsEnforcementLevel",
              "description": "Check to see what level deletion blocking is being enforced.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "blockForcePushesEnforcementLevel",
              "description": "Check to see what level force pushing is being enfored.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "creator",
              "description": "The creator of this protected branch.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "Identifies the name of the protected branch.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReviewsEnforcementLevel",
              "description": "Check to see what level reviews are being enforced.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this protected branch.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "requiredStatusChecksEnforcementLevel",
              "description": "Check to see what level merge statuses are being enforced.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reviewDismissalAllowances",
              "description": "A list review dismissal allowances for this protected branch.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReviewDismissalAllowanceConnection",
                  "description": "The connection type for ReviewDismissalAllowance.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "strictRequiredStatusChecksPolicy",
              "description": "Check if required status checks is turned on.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewDismissalAllowanceConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReviewDismissalAllowance.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReviewDismissalAllowanceEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReviewDismissalAllowance",
                  "description": "A team or user who as the ability to dismiss a review on a protected branch.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewDismissalAllowanceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "ReviewDismissalAllowance",
                "description": "A team or user who as the ability to dismiss a review on a protected branch.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewDismissalAllowance",
          "kind": "OBJECT",
          "description": "A team or user who as the ability to dismiss a review on a protected branch.",
          "fields": [
            {
              "name": "actor",
              "description": "The actor that can dismiss.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "ReviewDismissalAllowanceActor",
                "description": "Types that can be an actor.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "protectedBranch",
              "description": "Identifies the protected branch associated with the allowed user or team.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProtectedBranch",
                  "description": "A repository protected branch.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReviewDismissalAllowanceActor",
          "kind": "UNION",
          "description": "Types that can be an actor.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "User",
              "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Team",
              "description": "A team of users in an organization.",
              "ofType": null
            }
          ]
        },
        {
          "name": "Milestone",
          "kind": "OBJECT",
          "description": "Represents a Milestone object on a given repository.",
          "fields": [
            {
              "name": "closedIssueCount",
              "description": "Identifies the number of issues currently closed in this milestone.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdBy",
              "description": "Identifies the creator of the milestone.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "Identifies the description of the milestone.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "dueOn",
              "description": "Identifies the due date of the milestone.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "number",
              "description": "Identifies the number of the milestone.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "openIssueCount",
              "description": "Identifies the number of issues currently open in this milestone.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this milestone",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The repository associated with this milestone.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "Identifies the state of the milestone.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "MilestoneState",
                  "description": "The possible states of a milestone.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "title",
              "description": "Identifies the title of the milestone.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this milestone",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MilestoneState",
          "kind": "ENUM",
          "description": "The possible states of a milestone.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "OPEN",
              "description": "A milestone that is still open.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "CLOSED",
              "description": "A milestone that has been closed.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "MilestoneConnection",
          "kind": "OBJECT",
          "description": "The connection type for Milestone.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MilestoneEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Milestone",
                  "description": "Represents a Milestone object on a given repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MilestoneEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Milestone",
                "description": "Represents a Milestone object on a given repository.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LanguageConnection",
          "kind": "OBJECT",
          "description": "A list of languages associated with the parent.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "LanguageEdge",
                  "description": "Represents the language of a repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Language",
                  "description": "Represents a given language found in repositories.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalSize",
              "description": "The total size in bytes of files written in that language.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LanguageEdge",
          "kind": "OBJECT",
          "description": "Represents the language of a repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Language",
                  "description": "Represents a given language found in repositories.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "size",
              "description": "The number of bytes of code written in the language.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Language",
          "kind": "OBJECT",
          "description": "Represents a given language found in repositories.",
          "fields": [
            {
              "name": "color",
              "description": "The color defined for the current language.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the current language.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LanguageOrder",
          "kind": "INPUT_OBJECT",
          "description": "Ordering options for language connections.",
          "fields": null,
          "inputFields": [
            {
              "name": "field",
              "description": "The field to order languages by.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "LanguageOrderField",
                  "description": "Properties by which language connections can be ordered.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "direction",
              "description": "The ordering direction.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "OrderDirection",
                  "description": "Possible directions in which to order a list of items when provided an `orderBy` argument.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "LanguageOrderField",
          "kind": "ENUM",
          "description": "Properties by which language connections can be ordered.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SIZE",
              "description": "Order languages by the size of all files containing the language",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "RefConnection",
          "kind": "OBJECT",
          "description": "The connection type for Ref.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RefEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Ref",
                  "description": "Represents a Git reference.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RefEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "StargazerConnection",
          "kind": "OBJECT",
          "description": "The connection type for User.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StargazerEdge",
                  "description": "Represents a user that's starred a repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "StargazerEdge",
          "kind": "OBJECT",
          "description": "Represents a user that's starred a repository.",
          "fields": [
            {
              "name": "cursor",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "starredAt",
              "description": "Identifies when the item was starred.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReleaseConnection",
          "kind": "OBJECT",
          "description": "The connection type for Release.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ReleaseEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Release",
                  "description": "A release contains the content for a release.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "totalCount",
              "description": "Identifies the total count of items in the connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "ReleaseEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Release",
                "description": "A release contains the content for a release.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Subscribable",
          "kind": "INTERFACE",
          "description": "Entities that can be subscribed to for web and email notifications.",
          "fields": [
            {
              "name": "viewerCanSubscribe",
              "description": "Check if the viewer is able to change their subscription status for the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerSubscription",
              "description": "Identifies if the viewer is watching, not watching, or ignoring the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "SubscriptionState",
                  "description": "The possible states of a subscription.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Repository",
              "description": "A repository contains the content for a project.",
              "ofType": null
            }
          ]
        },
        {
          "name": "RepositoryInfo",
          "kind": "INTERFACE",
          "description": "A subset of repository info.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultBranchRef",
              "description": "The Ref associated with the repository's default branch.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the repository.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "descriptionHTML",
              "description": "The description of the repository rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasIssuesEnabled",
              "description": "Indicates if the repository has issues feature enabled.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasWikiEnabled",
              "description": "Indicates if the repository has wiki feature enabled.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "homepageURL",
              "description": "The repository's URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isFork",
              "description": "Identifies if the repository is a fork.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isLocked",
              "description": "Indicates if the repository has been locked or not.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isMirror",
              "description": "Identifies if the repository is a mirror.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPrivate",
              "description": "Identifies if the repository is private.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "license",
              "description": "The license associated with the repository",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lockReason",
              "description": "The reason the repository has been locked.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "RepositoryLockReason",
                "description": "The possible reasons a given repsitory could be in a locked state.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mirrorURL",
              "description": "The repository's original mirror URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "owner",
              "description": "The User owner of the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "RepositoryOwner",
                  "description": "Represents an owner of a Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this repository",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pushedAt",
              "description": "Identifies when the repository was last pushed to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this repository",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Repository",
              "description": "A repository contains the content for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "RepositoryInvitationRepository",
              "description": "A subset of repository info shared with potential collaborators.",
              "ofType": null
            }
          ]
        },
        {
          "name": "Blob",
          "kind": "OBJECT",
          "description": "Represents a Git blob.",
          "fields": [
            {
              "name": "byteSize",
              "description": "Byte size of Blob object",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isBinary",
              "description": "Indicates whether the Blob is binary or text",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isTruncated",
              "description": "Indicates whether the contents is truncated",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "GitObjectID",
                  "description": "A Git object ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "text",
              "description": "UTF8 text data or null if the Blob is binary",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "GitObject",
              "description": "Represents a Git object.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Bot",
          "kind": "OBJECT",
          "description": "A special type of user which takes actions on behalf of integrations.",
          "fields": [
            {
              "name": "avatarURL",
              "description": "A URL pointing to the owner's public avatar.",
              "args": [
                {
                  "name": "size",
                  "description": "The size of the resulting square image.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "login",
              "description": "The username of the author.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The path to this resource.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The URL to this resource.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Author",
              "description": "Represents an object which can create content. Typically a User or Bot.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "UniformResourceLocatable",
              "description": "Represents a type that can be retrieved by a URL.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GistComment",
          "kind": "OBJECT",
          "description": "Represents a comment on an Gist.",
          "fields": [
            {
              "name": "author",
              "description": "The author of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "body",
              "description": "Identifies the comment body.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "bodyHTML",
              "description": "The comment body rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createdViaEmail",
              "description": "Check if this comment was created via an email reply.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "editor",
              "description": "The editor of the comment.",
              "args": [],
              "type": {
                "kind": "INTERFACE",
                "name": "Author",
                "description": "Represents an object which can create content. Typically a User or Bot.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lastEditedAt",
              "description": "The moment the editor made the last edit",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanDelete",
              "description": "Check if the current viewer can delete this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCanEdit",
              "description": "Check if the current viewer edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerCannotEditReasons",
              "description": "Errors why the current viewer can not edit this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "CommentCannotEditReason",
                      "description": "The possible errors that will prevent a user from editting a comment.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewerDidAuthor",
              "description": "Did the viewer author this comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "Comment",
              "description": "Represents a comment.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "GpgSignature",
          "kind": "OBJECT",
          "description": "Represents a GPG signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "keyId",
              "description": "Hex-encoded ID of the key that signed this object.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "GitSignatureState",
                  "description": "The state of a Git signature.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "GitSignature",
              "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RepositoryInvitation",
          "kind": "OBJECT",
          "description": "An invitation for a user to be added to a repository.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "invitee",
              "description": "The user who received the invitation.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inviter",
              "description": "The user who created the invitation.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The Repository the user is invited to.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "RepositoryInvitationRepository",
                  "description": "A subset of repository info shared with potential collaborators.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RepositoryInvitationRepository",
          "kind": "OBJECT",
          "description": "A subset of repository info shared with potential collaborators.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Identifies the date and time when the object was created.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "defaultBranchRef",
              "description": "The Ref associated with the repository's default branch.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "Ref",
                "description": "Represents a Git reference.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": "The description of the repository.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "descriptionHTML",
              "description": "The description of the repository rendered to HTML.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "HTML",
                  "description": "A string containing HTML code.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasIssuesEnabled",
              "description": "Indicates if the repository has issues feature enabled.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "hasWikiEnabled",
              "description": "Indicates if the repository has wiki feature enabled.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "homepageURL",
              "description": "The repository's URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isFork",
              "description": "Identifies if the repository is a fork.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isLocked",
              "description": "Indicates if the repository has been locked or not.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isMirror",
              "description": "Identifies if the repository is a mirror.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isPrivate",
              "description": "Identifies if the repository is private.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "license",
              "description": "The license associated with the repository",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "lockReason",
              "description": "The reason the repository has been locked.",
              "args": [],
              "type": {
                "kind": "ENUM",
                "name": "RepositoryLockReason",
                "description": "The possible reasons a given repsitory could be in a locked state.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mirrorURL",
              "description": "The repository's original mirror URL.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The name of the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "owner",
              "description": "The User owner of the repository.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "RepositoryOwner",
                  "description": "Represents an owner of a Repository.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "path",
              "description": "The HTTP path for this repository",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pushedAt",
              "description": "Identifies when the repository was last pushed to.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "DateTime",
                "description": "An ISO-8601 encoded UTC date string.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatedAt",
              "description": "Identifies the date and time when the object was last updated.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "DateTime",
                  "description": "An ISO-8601 encoded UTC date string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "url",
              "description": "The HTTP url for this repository",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "URI",
                  "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "RepositoryInfo",
              "description": "A subset of repository info.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "SmimeSignature",
          "kind": "OBJECT",
          "description": "Represents an S/MIME signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "GitSignatureState",
                  "description": "The state of a Git signature.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "GitSignature",
              "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Tag",
          "kind": "OBJECT",
          "description": "Represents a Git tag.",
          "fields": [
            {
              "name": "id",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "message",
              "description": "The Git tag message.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": "The Git tag name.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "oid",
              "description": "The Git object ID",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "GitObjectID",
                  "description": "A Git object ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "The Repository the Git object belongs to",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Repository",
                  "description": "A repository contains the content for a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "tagger",
              "description": "Details about the tag author.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "GitActor",
                "description": "Represents an actor in a Git commit (ie. an author or committer).",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "target",
              "description": "The Git object the tag points to.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "GitObject",
                  "description": "Represents a Git object.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "description": "An object with an ID.",
              "ofType": null
            },
            {
              "kind": "INTERFACE",
              "name": "GitObject",
              "description": "Represents a Git object.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UnknownSignature",
          "kind": "OBJECT",
          "description": "Represents an unknown signature on a Commit or Tag.",
          "fields": [
            {
              "name": "email",
              "description": "Email used to sign this object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isValid",
              "description": "True if the signature is valid and verified by GitHub.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "payload",
              "description": "Payload for GPG signing object. Raw ODB object without the signature header.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signature",
              "description": "ASCII-armored signature header from object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "signer",
              "description": "GitHub user corresponding to the email signing this commit.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "state",
              "description": "The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "GitSignatureState",
                  "description": "The state of a Git signature.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "GitSignature",
              "description": "Information about a signature (GPG or S/MIME) on a Commit or Tag.",
              "ofType": null
            }
          ],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "Query",
          "kind": "OBJECT",
          "description": "The query root of GitHub's GraphQL interface.",
          "fields": [
            {
              "name": "node",
              "description": "Fetches an object given its ID.",
              "args": [
                {
                  "name": "id",
                  "description": "ID of the object.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "INTERFACE",
                "name": "Node",
                "description": "An object with an ID.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "Lookup nodes by a list of IDs.",
              "args": [
                {
                  "name": "ids",
                  "description": "The list of node IDs.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "LIST",
                      "name": null,
                      "description": null,
                      "ofType": {
                        "kind": "NON_NULL",
                        "name": null,
                        "description": null,
                        "ofType": {
                          "kind": "SCALAR",
                          "name": "ID",
                          "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                          "ofType": null
                        }
                      }
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "INTERFACE",
                    "name": "Node",
                    "description": "An object with an ID.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "organization",
              "description": "Lookup a organization by login.",
              "args": [
                {
                  "name": "login",
                  "description": "The organization's login.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Organization",
                "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "relay",
              "description": "Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Query",
                  "description": "The query root of GitHub's GraphQL interface.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repository",
              "description": "Lookup a given repository by the owner and repository name.",
              "args": [
                {
                  "name": "owner",
                  "description": "The login field of a user or organizationn",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "name",
                  "description": "The name of the repository",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "Repository",
                "description": "A repository contains the content for a project.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repositoryOwner",
              "description": "Lookup a repository owner (ie. either a User or an Organization) by login.",
              "args": [
                {
                  "name": "login",
                  "description": "The username to lookup the owner by.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "INTERFACE",
                "name": "RepositoryOwner",
                "description": "Represents an owner of a Repository.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "resource",
              "description": "Lookup resource by a URL.",
              "args": [
                {
                  "name": "url",
                  "description": "The URL.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "URI",
                    "description": "An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.",
                    "ofType": null
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "INTERFACE",
                "name": "UniformResourceLocatable",
                "description": "Represents a type that can be retrieved by a URL.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "search",
              "description": "Perform a search across resources.",
              "args": [
                {
                  "name": "first",
                  "description": "Returns the first _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "after",
                  "description": "Returns the elements in the list that come after the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "last",
                  "description": "Returns the last _n_ elements from the list.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "before",
                  "description": "Returns the elements in the list that come before the specified global ID.",
                  "type": {
                    "kind": "SCALAR",
                    "name": "String",
                    "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                    "ofType": null
                  },
                  "defaultValue": null
                },
                {
                  "name": "query",
                  "description": "The search string to look for.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                },
                {
                  "name": "type",
                  "description": "The types of search items to search within.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "SearchType",
                      "description": "Represents the individual results of a search.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SearchResultItemConnection",
                  "description": "A list of results that matched against a search query.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "user",
              "description": "Lookup a user by login.",
              "args": [
                {
                  "name": "login",
                  "description": "The user's login.",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "viewer",
              "description": "The currently authenticated user.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "SearchResultItemConnection",
          "kind": "OBJECT",
          "description": "A list of results that matched against a search query.",
          "fields": [
            {
              "name": "codeCount",
              "description": "The number of pieces of code that matched the search query.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "edges",
              "description": "A list of edges.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "SearchResultItemEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "issueCount",
              "description": "The number of issues that matched the search query.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "nodes",
              "description": "A list of nodes.",
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "UNION",
                  "name": "SearchResultItem",
                  "description": "The results of a search.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "description": "Information about pagination in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "repositoryCount",
              "description": "The number of repositories that matched the search query.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "userCount",
              "description": "The number of users that matched the search query.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "wikiCount",
              "description": "The number of wiki pages that matched the search query.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "SearchResultItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "node",
              "description": "The item at the end of the edge.",
              "args": [],
              "type": {
                "kind": "UNION",
                "name": "SearchResultItem",
                "description": "The results of a search.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "SearchResultItem",
          "kind": "UNION",
          "description": "The results of a search.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Issue",
              "description": "An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "PullRequest",
              "description": "A repository pull request.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Repository",
              "description": "A repository contains the content for a project.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "User",
              "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Organization",
              "description": "An account on GitHub, with one or more owners, that has repositories, members and teams.",
              "ofType": null
            }
          ]
        },
        {
          "name": "SearchType",
          "kind": "ENUM",
          "description": "Represents the individual results of a search.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "ISSUE",
              "description": "Returns results matching issues in repositories.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REPOSITORY",
              "description": "Returns results matching repositories.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "USER",
              "description": "Returns results matching users on GitHub.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "Mutation",
          "kind": "OBJECT",
          "description": "The root query for implementing GraphQL mutations.",
          "fields": [
            {
              "name": "addComment",
              "description": "Adds a comment to an Issue or Pull Request.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AddCommentInput",
                      "description": "Autogenerated input type of AddComment",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddCommentPayload",
                "description": "Autogenerated return type of AddComment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addProjectCard",
              "description": "Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AddProjectCardInput",
                      "description": "Autogenerated input type of AddProjectCard",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddProjectCardPayload",
                "description": "Autogenerated return type of AddProjectCard",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addProjectColumn",
              "description": "Adds a column to a Project.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AddProjectColumnInput",
                      "description": "Autogenerated input type of AddProjectColumn",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddProjectColumnPayload",
                "description": "Autogenerated return type of AddProjectColumn",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addPullRequestReview",
              "description": "Adds a review to a Pull Request.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AddPullRequestReviewInput",
                      "description": "Autogenerated input type of AddPullRequestReview",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddPullRequestReviewPayload",
                "description": "Autogenerated return type of AddPullRequestReview",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addPullRequestReviewComment",
              "description": "Adds a comment to a review.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AddPullRequestReviewCommentInput",
                      "description": "Autogenerated input type of AddPullRequestReviewComment",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddPullRequestReviewCommentPayload",
                "description": "Autogenerated return type of AddPullRequestReviewComment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "addReaction",
              "description": "Adds a reaction to a subject.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AddReactionInput",
                      "description": "Autogenerated input type of AddReaction",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "AddReactionPayload",
                "description": "Autogenerated return type of AddReaction",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "createProject",
              "description": "Creates a new project.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateProjectInput",
                      "description": "Autogenerated input type of CreateProject",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "CreateProjectPayload",
                "description": "Autogenerated return type of CreateProject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteProject",
              "description": "Deletes a project.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteProjectInput",
                      "description": "Autogenerated input type of DeleteProject",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteProjectPayload",
                "description": "Autogenerated return type of DeleteProject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteProjectCard",
              "description": "Deletes a project card.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteProjectCardInput",
                      "description": "Autogenerated input type of DeleteProjectCard",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteProjectCardPayload",
                "description": "Autogenerated return type of DeleteProjectCard",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deleteProjectColumn",
              "description": "Deletes a project column.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteProjectColumnInput",
                      "description": "Autogenerated input type of DeleteProjectColumn",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeleteProjectColumnPayload",
                "description": "Autogenerated return type of DeleteProjectColumn",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletePullRequestReview",
              "description": "Deletes a pull request review.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeletePullRequestReviewInput",
                      "description": "Autogenerated input type of DeletePullRequestReview",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DeletePullRequestReviewPayload",
                "description": "Autogenerated return type of DeletePullRequestReview",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "dismissPullRequestReview",
              "description": "Dismisses an approved or rejected pull request review.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DismissPullRequestReviewInput",
                      "description": "Autogenerated input type of DismissPullRequestReview",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "DismissPullRequestReviewPayload",
                "description": "Autogenerated return type of DismissPullRequestReview",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "moveProjectCard",
              "description": "Moves a project card to another place.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MoveProjectCardInput",
                      "description": "Autogenerated input type of MoveProjectCard",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MoveProjectCardPayload",
                "description": "Autogenerated return type of MoveProjectCard",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "moveProjectColumn",
              "description": "Moves a project column to another place.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "MoveProjectColumnInput",
                      "description": "Autogenerated input type of MoveProjectColumn",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "MoveProjectColumnPayload",
                "description": "Autogenerated return type of MoveProjectColumn",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeOutsideCollaborator",
              "description": "Removes outside collaborator from all repositories in an organization.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "RemoveOutsideCollaboratorInput",
                      "description": "Autogenerated input type of RemoveOutsideCollaborator",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RemoveOutsideCollaboratorPayload",
                "description": "Autogenerated return type of RemoveOutsideCollaborator",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removeReaction",
              "description": "Removes a reaction from a subject.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "RemoveReactionInput",
                      "description": "Autogenerated input type of RemoveReaction",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RemoveReactionPayload",
                "description": "Autogenerated return type of RemoveReaction",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "requestReviews",
              "description": "Set review requests on a pull request.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "RequestReviewsInput",
                      "description": "Autogenerated input type of RequestReviews",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "RequestReviewsPayload",
                "description": "Autogenerated return type of RequestReviews",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "submitPullRequestReview",
              "description": "Submits a pending pull request review.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "SubmitPullRequestReviewInput",
                      "description": "Autogenerated input type of SubmitPullRequestReview",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "SubmitPullRequestReviewPayload",
                "description": "Autogenerated return type of SubmitPullRequestReview",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateProject",
              "description": "Updates an existing project.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateProjectInput",
                      "description": "Autogenerated input type of UpdateProject",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateProjectPayload",
                "description": "Autogenerated return type of UpdateProject",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateProjectCard",
              "description": "Updates an existing project card.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateProjectCardInput",
                      "description": "Autogenerated input type of UpdateProjectCard",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateProjectCardPayload",
                "description": "Autogenerated return type of UpdateProjectCard",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateProjectColumn",
              "description": "Updates an existing project column.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateProjectColumnInput",
                      "description": "Autogenerated input type of UpdateProjectColumn",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateProjectColumnPayload",
                "description": "Autogenerated return type of UpdateProjectColumn",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatePullRequestReview",
              "description": "Updates the body of a pull request review.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdatePullRequestReviewInput",
                      "description": "Autogenerated input type of UpdatePullRequestReview",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdatePullRequestReviewPayload",
                "description": "Autogenerated return type of UpdatePullRequestReview",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updatePullRequestReviewComment",
              "description": "Updates a pull request review comment.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdatePullRequestReviewCommentInput",
                      "description": "Autogenerated input type of UpdatePullRequestReviewComment",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdatePullRequestReviewCommentPayload",
                "description": "Autogenerated return type of UpdatePullRequestReviewComment",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "updateSubscription",
              "description": "Updates viewers repository subscription state.",
              "args": [
                {
                  "name": "input",
                  "description": null,
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateSubscriptionInput",
                      "description": "Autogenerated input type of UpdateSubscription",
                      "ofType": null
                    }
                  },
                  "defaultValue": null
                }
              ],
              "type": {
                "kind": "OBJECT",
                "name": "UpdateSubscriptionPayload",
                "description": "Autogenerated return type of UpdateSubscription",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddReactionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddReaction",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reaction",
              "description": "The reaction object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Reaction",
                  "description": "An emoji reaction to a particular piece of content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "The reactable subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "Reactable",
                  "description": "Represents a subject that can be reacted on.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddReactionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddReaction",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "subjectId",
              "description": "The Node ID of the subject to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "content",
              "description": "The name of the emoji to react with.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ReactionContent",
                  "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RemoveReactionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveReaction",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reaction",
              "description": "The reaction object.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Reaction",
                  "description": "An emoji reaction to a particular piece of content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "The reactable subject.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "Reactable",
                  "description": "Represents a subject that can be reacted on.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RemoveReactionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveReaction",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "subjectId",
              "description": "The Node ID of the subject to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "content",
              "description": "The name of the emoji to react with.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "ReactionContent",
                  "description": "Emojis that can be attached to Issues, Pull Requests and Comments.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddComment",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commentEdge",
              "description": "The edge from the subject's comment connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueCommentEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subject",
              "description": "The subject",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "Node",
                  "description": "An object with an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "timelineEdge",
              "description": "The edge from the subject's timeline connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "IssueTimelineItemEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddComment",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "subjectId",
              "description": "The Node ID of the subject to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The contents of the comment.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateSubscriptionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateSubscription",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscribable",
              "description": "The input subscribable entity.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "Subscribable",
                  "description": "Entities that can be subscribed to for web and email notifications.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateSubscriptionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateSubscription",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "subscribableId",
              "description": "The Node ID of the subscribable object to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "state",
              "description": "The new state of the subscription.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "SubscriptionState",
                  "description": "The possible states of a subscription.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CreateProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateProject",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "The new project.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Project",
                  "description": "Projects manage issues, pull requests and notes within a project owner.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "CreateProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateProject",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "ownerId",
              "description": "The owner ID to create the project under.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "The name of project.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The description of project.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProject",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "The updated project.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Project",
                  "description": "Projects manage issues, pull requests and notes within a project owner.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProject",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectId",
              "description": "The Project ID to update.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "The name of project.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The description of project.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "state",
              "description": "Whether the project is open or closed.",
              "type": {
                "kind": "ENUM",
                "name": "ProjectState",
                "description": "State of the project; either 'open' or 'closed'",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeleteProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProject",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "owner",
              "description": "The repository or organization the project was removed from.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INTERFACE",
                  "name": "ProjectOwner",
                  "description": "Represents an owner of a Project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeleteProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProject",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectId",
              "description": "The Project ID to update.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "columnEdge",
              "description": "The edge from the project's column connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumnEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "The project",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Project",
                  "description": "Projects manage issues, pull requests and notes within a project owner.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddProjectColumn",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectId",
              "description": "The Node ID of the project.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "The name of the column.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MoveProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MoveProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "columnEdge",
              "description": "The new edge of the moved column.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumnEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MoveProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MoveProjectColumn",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "columnId",
              "description": "The id of the column to move.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "afterColumnId",
              "description": "Place the new column after the column with this id. Pass null to place it at the front.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectColumn",
              "description": "The updated project column.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumn",
                  "description": "A column inside a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProjectColumn",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectColumnId",
              "description": "The ProjectColumn ID to update.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "name",
              "description": "The name of project column.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeleteProjectColumnPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProjectColumn",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedColumnId",
              "description": "The deleted column ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "project",
              "description": "The project the deleted column was in.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Project",
                  "description": "Projects manage issues, pull requests and notes within a project owner.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeleteProjectColumnInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProjectColumn",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "columnId",
              "description": "The id of the column to delete.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddProjectCard",
          "fields": [
            {
              "name": "cardEdge",
              "description": "The edge from the ProjectColumn's card connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCardEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectColumn",
              "description": "The ProjectColumn",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Project",
                  "description": "Projects manage issues, pull requests and notes within a project owner.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddProjectCard",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectColumnId",
              "description": "The Node ID of the ProjectColumn.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "contentId",
              "description": "The content of the card. Must be a member of the ProjectCardItem union",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "note",
              "description": "The note on the card.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateProjectCard",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "projectCard",
              "description": "The updated ProjectCard.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCard",
                  "description": "A card in a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdateProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateProjectCard",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "projectCardId",
              "description": "The ProjectCard ID to update.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "note",
              "description": "The note of ProjectCard.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MoveProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MoveProjectCard",
          "fields": [
            {
              "name": "cardEdge",
              "description": "The new edge of the moved card.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectCardEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "MoveProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MoveProjectCard",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardId",
              "description": "The id of the card to move.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "columnId",
              "description": "The id of the column to move it into.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "afterCardId",
              "description": "Place the new card after the card with this id. Pass null to place it at the top.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeleteProjectCardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteProjectCard",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "column",
              "description": "The column the deleted card was in.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "ProjectColumn",
                  "description": "A column inside a project.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deletedCardId",
              "description": "The deleted card ID.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeleteProjectCardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteProjectCard",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "cardId",
              "description": "The id of the card to delete.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReview",
              "description": "The newly created pull request review.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "reviewEdge",
              "description": "The edge from the pull request's review connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddPullRequestReview",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestId",
              "description": "The Node ID of the pull request to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The contents of the review body comment.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "event",
              "description": "The event to perform on the pull request review.",
              "type": {
                "kind": "ENUM",
                "name": "PullRequestReviewEvent",
                "description": "The possible events to perform on a pull request review.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "comments",
              "description": "The review line comments.",
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "DraftPullRequestReviewComment",
                  "description": "Specifies a review comment to be left with a Pull Request Review.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "PullRequestReviewEvent",
          "kind": "ENUM",
          "description": "The possible events to perform on a pull request review.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "COMMENT",
              "description": "Submit general feedback without explicit approval.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "APPROVE",
              "description": "Submit feedback and approve merging these changes.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "REQUEST_CHANGES",
              "description": "Submit feedback that must be addressed before merging.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "DISMISS",
              "description": "Dismiss review so it now longer effects merging.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "DraftPullRequestReviewComment",
          "kind": "INPUT_OBJECT",
          "description": "Specifies a review comment to be left with a Pull Request Review.",
          "fields": null,
          "inputFields": [
            {
              "name": "path",
              "description": "Path to the file being commented on.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "position",
              "description": "Position in the file to leave a comment on.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "Body of the comment to leave.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "SubmitPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SubmitPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReview",
              "description": "The submitted pull request review.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "SubmitPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SubmitPullRequestReview",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestReviewId",
              "description": "The Pull Request Review ID to submit.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "event",
              "description": "The event to send to the Pull Request Review.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "PullRequestReviewEvent",
                  "description": "The possible events to perform on a pull request review.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The text field to set on the Pull Request Review.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdatePullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReview",
              "description": "The updated pull request review.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdatePullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePullRequestReview",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestReviewId",
              "description": "The Node ID of the pull request review to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The contents of the pull request review body.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DismissPullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DismissPullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReview",
              "description": "The dismissed pull request review.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DismissPullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DismissPullRequestReview",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestReviewId",
              "description": "The Node ID of the pull request review to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "message",
              "description": "The contents of the pull request review dismissal message.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeletePullRequestReviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeletePullRequestReview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReview",
              "description": "The deleted pull request review.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReview",
                  "description": "A review object for a given pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "DeletePullRequestReviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeletePullRequestReview",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestReviewId",
              "description": "The Node ID of the pull request review to delete.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddPullRequestReviewCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddPullRequestReviewComment",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "comment",
              "description": "The newly created comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewComment",
                  "description": "A review comment associated with a given repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "commentEdge",
              "description": "The edge from the review's comment connection.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewCommentEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "AddPullRequestReviewCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddPullRequestReviewComment",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestReviewId",
              "description": "The Node ID of the review to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "commitOID",
              "description": "The SHA of the commit to comment on.",
              "type": {
                "kind": "SCALAR",
                "name": "GitObjectID",
                "description": "A Git object ID.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The text of the comment.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "path",
              "description": "The relative path of the file to comment on.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "position",
              "description": "The line index in the diff to comment on.",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "inReplyTo",
              "description": "The comment id to reply to.",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdatePullRequestReviewCommentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePullRequestReviewComment",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequestReviewComment",
              "description": "The updated comment.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequestReviewComment",
                  "description": "A review comment associated with a given repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "UpdatePullRequestReviewCommentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePullRequestReviewComment",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestReviewCommentId",
              "description": "The Node ID of the comment to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "body",
              "description": "The text of the comment.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RemoveOutsideCollaboratorPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveOutsideCollaborator",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "removedUser",
              "description": "The user that was removed as an outside collaborator.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "description": "A user is an individual's account on GitHub that owns repositories and can make new content.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RemoveOutsideCollaboratorInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveOutsideCollaborator",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "userId",
              "description": "The ID of the outside collaborator to remove.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "organizationId",
              "description": "The ID of the organization to remove the outside collaborator from.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RequestReviewsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RequestReviews",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "pullRequest",
              "description": "The pull request that is getting requests.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PullRequest",
                  "description": "A repository pull request.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "requestedReviewersEdge",
              "description": "The edge from the pull request to the requested reviewers.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserEdge",
                  "description": "An edge in a connection.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "RequestReviewsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RequestReviews",
          "fields": null,
          "inputFields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation.",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": null
            },
            {
              "name": "pullRequestId",
              "description": "The Node ID of the pull request to modify.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                  "ofType": null
                }
              },
              "defaultValue": null
            },
            {
              "name": "userIds",
              "description": "The Node IDs of the users to request.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
                      "ofType": null
                    }
                  }
                }
              },
              "defaultValue": null
            },
            {
              "name": "union",
              "description": "Add users to the set rather than replace.",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "description": "Represents `true` or `false` values.",
                "ofType": null
              },
              "defaultValue": null
            }
          ],
          "interfaces": null,
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "__Schema",
          "kind": "OBJECT",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "directives",
              "description": "A list of all directives supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "types",
              "description": "A list of all types supported by this server.",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "__Type",
          "kind": "OBJECT",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "enumValues",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "fields",
              "description": null,
              "args": [
                {
                  "name": "includeDeprecated",
                  "description": null,
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "description": "Represents `true` or `false` values.",
                    "ofType": null
                  },
                  "defaultValue": "false"
                }
              ],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "inputFields",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "interfaces",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "kind",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "description": "An enum describing what kind of type a given `__Type` is.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ofType",
              "description": null,
              "args": [],
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "possibleTypes",
              "description": null,
              "args": [],
              "type": {
                "kind": "LIST",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                    "ofType": null
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "__TypeKind",
          "kind": "ENUM",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "SCALAR",
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "LIST",
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "NON_NULL",
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        },
        {
          "name": "__Field",
          "kind": "OBJECT",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "__InputValue",
          "kind": "OBJECT",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "type",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "__EnumValue",
          "kind": "OBJECT",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "deprecationReason",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "isDeprecated",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "__Directive",
          "kind": "OBJECT",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "args",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "description",
              "description": null,
              "args": [],
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "locations",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "description": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "description": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
                      "ofType": null
                    }
                  }
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "name",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                  "ofType": null
                }
              },
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "onField",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            },
            {
              "name": "onFragment",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            },
            {
              "name": "onOperation",
              "description": null,
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "isDeprecated": true,
              "deprecationReason": "Use `locations`."
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "enumValues": null,
          "possibleTypes": null
        },
        {
          "name": "__DirectiveLocation",
          "kind": "ENUM",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "enumValues": [
            {
              "name": "QUERY",
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "MUTATION",
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SUBSCRIPTION",
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD",
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_DEFINITION",
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FRAGMENT_SPREAD",
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INLINE_FRAGMENT",
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCHEMA",
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "SCALAR",
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "OBJECT",
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "FIELD_DEFINITION",
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ARGUMENT_DEFINITION",
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INTERFACE",
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "UNION",
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM",
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "ENUM_VALUE",
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_OBJECT",
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "deprecationReason": null
            },
            {
              "name": "INPUT_FIELD_DEFINITION",
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "deprecationReason": null
            }
          ],
          "possibleTypes": null
        }
      ],
      "directives": [
        {
          "name": "include",
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Included when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "skip",
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "args": [
            {
              "name": "if",
              "description": "Skipped when true.",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "description": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "description": "Represents `true` or `false` values.",
                  "ofType": null
                }
              },
              "defaultValue": null
            }
          ]
        },
        {
          "name": "deprecated",
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "args": [
            {
              "name": "reason",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
                "ofType": null
              },
              "defaultValue": "\"No longer supported\""
            }
          ]
        }
      ]
    }
  }
}