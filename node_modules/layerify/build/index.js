var layerify = function layerify(obj) {
  var sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '__';

  var ret = {};
  for (var k in obj) {
    if (obj.hasOwnProperty(k)) {
      if (obj[k] === null || obj[k] === void 0) {
        continue;
      }
      var t = k.split(sep);
      var groups = t.slice(0, -1);
      var field = t[t.length - 1];
      var d = ret;
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = groups[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var group = _step.value;

          d[group] = d[group] || {};
          d = d[group];
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      d[field] = obj[k];
    }
  }
  return ret;
};

export default layerify;
//# sourceMappingURL=index.js.map
